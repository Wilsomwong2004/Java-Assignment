import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author songj
 */
public class AdminPage extends javax.swing.JFrame {

    public AdminPage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        hospitalBtn = new javax.swing.JButton();
        supplierBtn = new javax.swing.JButton();
        userBtn = new javax.swing.JButton();
        ppeBtn = new javax.swing.JButton();
        transactionBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        logoutBtn = new javax.swing.JLabel();
        reportBtn = new javax.swing.JButton();
        mainPanel = new javax.swing.JLayeredPane();
        label = new javax.swing.JLabel();
        form = new javax.swing.JLayeredPane();
        hospitalForm = new javax.swing.JLayeredPane();
        jLabel21 = new javax.swing.JLabel();
        hospitalFormTitle = new javax.swing.JLabel();
        ht1 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        ht2 = new javax.swing.JTextArea();
        ht3 = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        newHospitalID = new javax.swing.JLabel();
        addHospitalBtn = new javax.swing.JButton();
        saveHospitalBtn = new javax.swing.JButton();
        ppeitemForm = new javax.swing.JLayeredPane();
        ppeItemFormTitle = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        t2 = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        t1 = new javax.swing.JTextField();
        t3 = new javax.swing.JComboBox<>();
        t5 = new javax.swing.JLabel();
        addPPEBtn = new javax.swing.JButton();
        savePPEBtn = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        t4 = new javax.swing.JTextField();
        transactionForm = new javax.swing.JLayeredPane();
        jLabel30 = new javax.swing.JLabel();
        addTransBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        newTransactionID = new javax.swing.JLabel();
        tt4 = new javax.swing.JTextField();
        tt3 = new javax.swing.JComboBox<>();
        tt1 = new javax.swing.JComboBox<>();
        tt2 = new javax.swing.JComboBox<>();
        supplierForm = new javax.swing.JLayeredPane();
        supplierFormTitle = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        st1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        st2 = new javax.swing.JTextArea();
        st3 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        newSupplierID = new javax.swing.JLabel();
        addSupplierBtn = new javax.swing.JButton();
        saveSupplierBtn = new javax.swing.JButton();
        userForm = new javax.swing.JLayeredPane();
        userFormTitle = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        ut1 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        ut2 = new javax.swing.JTextField();
        saveUserBtn = new javax.swing.JButton();
        addUserBtn = new javax.swing.JButton();
        ut5 = new javax.swing.JComboBox<>();
        newUserID = new javax.swing.JLabel();
        ut3 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        ut4 = new javax.swing.JComboBox<>();
        jLabel25 = new javax.swing.JLabel();
        report = new javax.swing.JLayeredPane();
        supplierFormTitle1 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        endDateField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        filterReportBtn = new javax.swing.JButton();
        startDateField = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        r1 = new javax.swing.JLabel();
        r2 = new javax.swing.JLabel();
        r3 = new javax.swing.JLabel();
        r4 = new javax.swing.JLabel();
        r5 = new javax.swing.JLabel();
        table = new javax.swing.JLayeredPane();
        userScrollTable = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();
        ppeItemScrollTable = new javax.swing.JScrollPane();
        ppeItemTable = new javax.swing.JTable();
        transactionScrollTable = new javax.swing.JScrollPane();
        transactionTable = new javax.swing.JTable();
        supplierScrollTable = new javax.swing.JScrollPane();
        supplierTable = new javax.swing.JTable();
        hospitalScrollTable = new javax.swing.JScrollPane();
        hospitalTable = new javax.swing.JTable();
        delBtn = new javax.swing.JButton();
        editBtn = new javax.swing.JButton();
        searchpanel = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        searchbar = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        longlines = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setAlignmentX(0);
        jPanel1.setAlignmentY(0);

        hospitalBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        //hospitalBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("./pic/hospital.png"))); // NOI18N
        //URL hospitalImageURL = getClass().getResource("./resources/pic/hospital.png");
        //System.out.println("Hospital image URL: " + hospitalImageURL);
        //if (hospitalImageURL != null) {
        //    hospitalBtn.setIcon(new ImageIcon(hospitalImageURL));
        //} else {
        //    System.err.println("Resource not found: /pic/hospital.png");
        //}
        ImageIcon hospitalIcon = ResourceLoader.loadIcon("/pic/hospital.png");
        if (hospitalIcon != null) {
            hospitalBtn.setIcon(hospitalIcon);
        }
        hospitalBtn.setText("Hospital");
        hospitalBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospitalBtnActionPerformed(evt);
            }
        });

        supplierBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        //supplierBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("./pic/supplier.png"))); // NOI18N
        //URL supplierImageURL = getClass().getResource("/pic/supplier.png");
        //if (supplierImageURL != null) {
        //    supplierBtn.setIcon(new ImageIcon(supplierImageURL));
        //} else {
        //    System.err.println("Resource not found: /pic/supplier.png");
        //}
        ImageIcon supplierIcon = ResourceLoader.loadIcon("/pic/supplier.png");
        if (supplierIcon != null) {
            supplierBtn.setIcon(supplierIcon);
        }

        supplierBtn.setText("Supplier");
        supplierBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierBtnActionPerformed(evt);
            }
        });

        userBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        //userBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("./pic/user.png"))); // NOI18N
        //URL userImageURL = getClass().getResource("/pic/user.png");
        //if (userImageURL != null) {
        //    userBtn.setIcon(new ImageIcon(userImageURL));
        //} else {
        //    System.err.println("Resource not found: /pic/user.png");
        //}
        ImageIcon userIcon = ResourceLoader.loadIcon("/pic/user.png");
        if (userIcon != null) {
            userBtn.setIcon(userIcon);
        }
        userBtn.setText("User");
        userBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userBtnActionPerformed(evt);
            }
        });

        ppeBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        //ppeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("./pic/ppe item.png"))); // NOI18N
        //URL ppeImageURL = getClass().getResource("/pic/ppe item.png");
        //if (ppeImageURL != null) {
        //    ppeBtn.setIcon(new ImageIcon(ppeImageURL));
        //} else {
        //    System.err.println("Resource not found: /pic/ppe item.png");
        //}
        ImageIcon ppeIcon = ResourceLoader.loadIcon("/pic/ppe item.png");
        if (ppeIcon != null) {
            ppeBtn.setIcon(ppeIcon);
        }
        ppeBtn.setText("PPE item");
        ppeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ppeBtnActionPerformed(evt);
            }
        });

        transactionBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        //transactionBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("./pic/transaction.png"))); // NOI18N
        //URL transactionImageURL = getClass().getResource("/pic/transaction.png");
        //if (transactionImageURL != null) {
        //    transactionBtn.setIcon(new ImageIcon(transactionImageURL));
        //} else {
        //    System.err.println("Resource not found: /pic/transaction.png");
        //}
        ImageIcon transactionIcon = ResourceLoader.loadIcon("/pic/transaction.png");
        if (transactionIcon != null) {
            transactionBtn.setIcon(transactionIcon);
        }
        transactionBtn.setText("Transaction");
        transactionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transactionBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Ravie", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("ADMIN PAGE");

        logoutBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        logoutBtn.setForeground(new java.awt.Color(255, 255, 255));
        ////logoutBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("./pic/log out.png"))); // NOI18N
        //URL logoutImageURL = getClass().getResource("/pic/log out.png");
        //if (logoutImageURL != null) {
        //    logoutBtn.setIcon(new ImageIcon(logoutImageURL));
        //} else {
        //    System.err.println("Resource not found: /pic/log out.png");
        //}
        ImageIcon logoutIcon = ResourceLoader.loadIcon("/pic/log out.png");
        if (logoutIcon != null) {
            logoutBtn.setIcon(logoutIcon);
        }
        logoutBtn.setText("Log Out");
        logoutBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutBtnMouseClicked(evt);
            }
        });

        reportBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        // reportBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/report.png"))); // NOI18N
        // reportBtn.setText("     Report");
        // reportBtn.addActionListener(new java.awt.event.ActionListener() {
        //     public void actionPerformed(java.awt.event.ActionEvent evt) {
        //         reportBtnActionPerformed(evt);
        //     }
        // });
        ImageIcon reportIcon = ResourceLoader.loadIcon("/pic/report.png");
        if (reportIcon != null) {
            reportBtn.setIcon(reportIcon);
        }
        reportBtn.setText("     Report");
        reportBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(hospitalBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(supplierBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ppeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(transactionBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(userBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reportBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 619, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(logoutBtn)
                        .addGap(17, 17, 17))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(logoutBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hospitalBtn)
                    .addComponent(supplierBtn)
                    .addComponent(userBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reportBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ppeBtn)
                    .addComponent(transactionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        label.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label.setText("HOSPITAL");

        form.setLayout(new java.awt.CardLayout());

        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel21.setText("Hospital ID:");

        hospitalFormTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        hospitalFormTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        hospitalFormTitle.setText("New Hospital Form");

        jLabel22.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel22.setText("Name:");

        jLabel23.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel23.setText("Address:");

        ht2.setColumns(20);
        ht2.setRows(5);
        jScrollPane6.setViewportView(ht2);

        jLabel24.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel24.setText("Phone Number:");

        newHospitalID.setText("Code here");

        addHospitalBtn.setBackground(new java.awt.Color(51, 51, 51));
        addHospitalBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        addHospitalBtn.setForeground(new java.awt.Color(255, 255, 255));
        addHospitalBtn.setText("Add New");
        addHospitalBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addHospitalBtnActionPerformed(evt);
            }
        });

        saveHospitalBtn.setBackground(new java.awt.Color(51, 51, 51));
        saveHospitalBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        saveHospitalBtn.setForeground(new java.awt.Color(255, 255, 255));
        saveHospitalBtn.setText("Save Changes");
        saveHospitalBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveHospitalBtnActionPerformed(evt);
            }
        });

        hospitalForm.setLayer(jLabel21, javax.swing.JLayeredPane.DEFAULT_LAYER);
        hospitalForm.setLayer(hospitalFormTitle, javax.swing.JLayeredPane.DEFAULT_LAYER);
        hospitalForm.setLayer(ht1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        hospitalForm.setLayer(jLabel22, javax.swing.JLayeredPane.DEFAULT_LAYER);
        hospitalForm.setLayer(jLabel23, javax.swing.JLayeredPane.DEFAULT_LAYER);
        hospitalForm.setLayer(jScrollPane6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        hospitalForm.setLayer(ht3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        hospitalForm.setLayer(jLabel24, javax.swing.JLayeredPane.DEFAULT_LAYER);
        hospitalForm.setLayer(newHospitalID, javax.swing.JLayeredPane.DEFAULT_LAYER);
        hospitalForm.setLayer(addHospitalBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
        hospitalForm.setLayer(saveHospitalBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout hospitalFormLayout = new javax.swing.GroupLayout(hospitalForm);
        hospitalForm.setLayout(hospitalFormLayout);
        hospitalFormLayout.setHorizontalGroup(
            hospitalFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hospitalFormLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(hospitalFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hospitalFormTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(hospitalFormLayout.createSequentialGroup()
                        .addGroup(hospitalFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel24))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(hospitalFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ht3, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newHospitalID, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)
                            .addComponent(ht1))
                        .addGap(0, 50, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, hospitalFormLayout.createSequentialGroup()
                        .addGap(0, 328, Short.MAX_VALUE)
                        .addGroup(hospitalFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(saveHospitalBtn)
                            .addComponent(addHospitalBtn))
                        .addGap(24, 24, 24)))
                .addContainerGap())
        );
        hospitalFormLayout.setVerticalGroup(
            hospitalFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hospitalFormLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(hospitalFormTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(hospitalFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(newHospitalID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(hospitalFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ht1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addGap(18, 18, 18)
                .addGroup(hospitalFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(hospitalFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ht3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addHospitalBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveHospitalBtn)
                .addContainerGap(115, Short.MAX_VALUE))
        );

        form.add(hospitalForm, "card4");

        ppeItemFormTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        ppeItemFormTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ppeItemFormTitle.setText("New PPE Item Form");

        jLabel26.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel26.setText("Item ID:");

        jLabel27.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel27.setText("Item Name:");

        jLabel28.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel28.setText("Supplier ID:");

        jLabel29.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel29.setText("Quantity In Stock:");

            t5.setText("100");

            addPPEBtn.setBackground(new java.awt.Color(51, 51, 51));
            addPPEBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
            addPPEBtn.setForeground(new java.awt.Color(255, 255, 255));
            addPPEBtn.setText("Add New");
            addPPEBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    addPPEBtnActionPerformed(evt);
                }
            });

            savePPEBtn.setBackground(new java.awt.Color(51, 51, 51));
            savePPEBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
            savePPEBtn.setForeground(new java.awt.Color(255, 255, 255));
            savePPEBtn.setText("Save Changes");
            savePPEBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    savePPEBtnActionPerformed(evt);
                }
            });

            jLabel31.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
            jLabel31.setText("Price:");

            ppeitemForm.setLayer(ppeItemFormTitle, javax.swing.JLayeredPane.DEFAULT_LAYER);
            ppeitemForm.setLayer(jLabel26, javax.swing.JLayeredPane.DEFAULT_LAYER);
            ppeitemForm.setLayer(t2, javax.swing.JLayeredPane.DEFAULT_LAYER);
            ppeitemForm.setLayer(jLabel27, javax.swing.JLayeredPane.DEFAULT_LAYER);
            ppeitemForm.setLayer(jLabel28, javax.swing.JLayeredPane.DEFAULT_LAYER);
            ppeitemForm.setLayer(jLabel29, javax.swing.JLayeredPane.DEFAULT_LAYER);
            ppeitemForm.setLayer(t1, javax.swing.JLayeredPane.DEFAULT_LAYER);
            ppeitemForm.setLayer(t3, javax.swing.JLayeredPane.DEFAULT_LAYER);
            ppeitemForm.setLayer(t5, javax.swing.JLayeredPane.DEFAULT_LAYER);
            ppeitemForm.setLayer(addPPEBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
            ppeitemForm.setLayer(savePPEBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
            ppeitemForm.setLayer(jLabel31, javax.swing.JLayeredPane.DEFAULT_LAYER);
            ppeitemForm.setLayer(t4, javax.swing.JLayeredPane.DEFAULT_LAYER);

            javax.swing.GroupLayout ppeitemFormLayout = new javax.swing.GroupLayout(ppeitemForm);
            ppeitemForm.setLayout(ppeitemFormLayout);
            ppeitemFormLayout.setHorizontalGroup(
                ppeitemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(ppeitemFormLayout.createSequentialGroup()
                    .addGroup(ppeitemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(savePPEBtn)
                        .addComponent(addPPEBtn)
                        .addGroup(ppeitemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ppeitemFormLayout.createSequentialGroup()
                                .addComponent(jLabel29)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(t5, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(ppeitemFormLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(ppeItemFormTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(ppeitemFormLayout.createSequentialGroup()
                                .addGroup(ppeitemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel28, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel27, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                                    .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(42, 42, 42)
                                .addGroup(ppeitemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(t1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(t2, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(t3, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(t4, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addContainerGap(48, Short.MAX_VALUE))
            );
            ppeitemFormLayout.setVerticalGroup(
                ppeitemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(ppeitemFormLayout.createSequentialGroup()
                    .addComponent(ppeItemFormTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(25, 25, 25)
                    .addGroup(ppeitemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(ppeitemFormLayout.createSequentialGroup()
                            .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(9, 9, 9)
                            .addGroup(ppeitemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel27)
                                .addComponent(t2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(ppeitemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel28)
                                .addComponent(t3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(t1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(ppeitemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(t4)
                        .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                    .addGroup(ppeitemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(t5)
                        .addComponent(jLabel29))
                    .addGap(42, 42, 42)
                    .addComponent(addPPEBtn)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(savePPEBtn)
                    .addGap(126, 126, 126))
            );

            form.add(ppeitemForm, "card4");

            jLabel30.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
            jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            jLabel30.setText("New Transaction Form");

            addTransBtn.setBackground(new java.awt.Color(51, 51, 51));
            addTransBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
            addTransBtn.setForeground(new java.awt.Color(255, 255, 255));
            addTransBtn.setText("Add New");
            addTransBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    addTransBtnActionPerformed(evt);
                }
            });

            jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
            jLabel2.setText("Transaction ID:");

            jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
            jLabel3.setText("Item Code:");

            jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
            jLabel4.setText("Process:");

            jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
            jLabel5.setText("Hospital Code:");

            jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
            jLabel6.setText("Quantity:");

            newTransactionID.setText("Code here");

            tt2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Distribute", "Receive" }));

            transactionForm.setLayer(jLabel30, javax.swing.JLayeredPane.DEFAULT_LAYER);
            transactionForm.setLayer(addTransBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
            transactionForm.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
            transactionForm.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
            transactionForm.setLayer(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
            transactionForm.setLayer(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);
            transactionForm.setLayer(jLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);
            transactionForm.setLayer(newTransactionID, javax.swing.JLayeredPane.DEFAULT_LAYER);
            transactionForm.setLayer(tt4, javax.swing.JLayeredPane.DEFAULT_LAYER);
            transactionForm.setLayer(tt3, javax.swing.JLayeredPane.DEFAULT_LAYER);
            transactionForm.setLayer(tt1, javax.swing.JLayeredPane.DEFAULT_LAYER);
            transactionForm.setLayer(tt2, javax.swing.JLayeredPane.DEFAULT_LAYER);

            javax.swing.GroupLayout transactionFormLayout = new javax.swing.GroupLayout(transactionForm);
            transactionForm.setLayout(transactionFormLayout);
            transactionFormLayout.setHorizontalGroup(
                transactionFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(transactionFormLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(transactionFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(addTransBtn)
                        .addGroup(transactionFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(transactionFormLayout.createSequentialGroup()
                                .addGroup(transactionFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addGroup(transactionFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(transactionFormLayout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addGroup(transactionFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(newTransactionID, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(tt1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(tt2, 0, 136, Short.MAX_VALUE)))
                                    .addGroup(transactionFormLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(tt4))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, transactionFormLayout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(tt3, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(45, Short.MAX_VALUE))
            );
            transactionFormLayout.setVerticalGroup(
                transactionFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(transactionFormLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addGroup(transactionFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(newTransactionID)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addGap(18, 18, 18)
                    .addGroup(transactionFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(tt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(transactionFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(tt2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(21, 21, 21)
                    .addGroup(transactionFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tt3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5))
                    .addGap(18, 18, 18)
                    .addGroup(transactionFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(tt4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6))
                    .addGap(67, 67, 67)
                    .addComponent(addTransBtn)
                    .addContainerGap(102, Short.MAX_VALUE))
            );

            form.add(transactionForm, "card2");

            supplierFormTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
            supplierFormTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            supplierFormTitle.setText("New Supplier Form");

            jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
            jLabel12.setText("Supplier ID:");

            jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
            jLabel7.setText("Name:");

            jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
            jLabel13.setText("Address:");

            st2.setColumns(20);
            st2.setRows(5);
            jScrollPane4.setViewportView(st2);

            jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
            jLabel14.setText("Phone Number:");

            newSupplierID.setText("Code here");

            addSupplierBtn.setBackground(new java.awt.Color(51, 51, 51));
            addSupplierBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
            addSupplierBtn.setForeground(new java.awt.Color(255, 255, 255));
            addSupplierBtn.setText("Add New");
            addSupplierBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    addSupplierBtnActionPerformed(evt);
                }
            });

            saveSupplierBtn.setBackground(new java.awt.Color(51, 51, 51));
            saveSupplierBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
            saveSupplierBtn.setForeground(new java.awt.Color(255, 255, 255));
            saveSupplierBtn.setText("Save Changes");
            saveSupplierBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    saveSupplierBtnActionPerformed(evt);
                }
            });

            supplierForm.setLayer(supplierFormTitle, javax.swing.JLayeredPane.DEFAULT_LAYER);
            supplierForm.setLayer(jLabel12, javax.swing.JLayeredPane.DEFAULT_LAYER);
            supplierForm.setLayer(st1, javax.swing.JLayeredPane.DEFAULT_LAYER);
            supplierForm.setLayer(jLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);
            supplierForm.setLayer(jLabel13, javax.swing.JLayeredPane.DEFAULT_LAYER);
            supplierForm.setLayer(jScrollPane4, javax.swing.JLayeredPane.DEFAULT_LAYER);
            supplierForm.setLayer(st3, javax.swing.JLayeredPane.DEFAULT_LAYER);
            supplierForm.setLayer(jLabel14, javax.swing.JLayeredPane.DEFAULT_LAYER);
            supplierForm.setLayer(newSupplierID, javax.swing.JLayeredPane.DEFAULT_LAYER);
            supplierForm.setLayer(addSupplierBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
            supplierForm.setLayer(saveSupplierBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);

            javax.swing.GroupLayout supplierFormLayout = new javax.swing.GroupLayout(supplierForm);
            supplierForm.setLayout(supplierFormLayout);
            supplierFormLayout.setHorizontalGroup(
                supplierFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(supplierFormLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(supplierFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(supplierFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(saveSupplierBtn)
                            .addComponent(addSupplierBtn)
                            .addGroup(supplierFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(supplierFormLayout.createSequentialGroup()
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(newSupplierID, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(supplierFormLayout.createSequentialGroup()
                                    .addGroup(supplierFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel14))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(supplierFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                                        .addComponent(st1)
                                        .addGroup(supplierFormLayout.createSequentialGroup()
                                            .addComponent(st3, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(0, 0, Short.MAX_VALUE))))))
                        .addComponent(supplierFormTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(34, Short.MAX_VALUE))
            );
            supplierFormLayout.setVerticalGroup(
                supplierFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(supplierFormLayout.createSequentialGroup()
                    .addComponent(supplierFormTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(25, 25, 25)
                    .addGroup(supplierFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12)
                        .addComponent(newSupplierID))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(supplierFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(st1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7))
                    .addGap(18, 18, 18)
                    .addGroup(supplierFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel13))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(supplierFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel14)
                        .addComponent(st3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addComponent(addSupplierBtn)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(saveSupplierBtn)
                    .addContainerGap(118, Short.MAX_VALUE))
            );

            form.add(supplierForm, "card3");

            userFormTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
            userFormTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            userFormTitle.setText("New User Form");

            jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
            jLabel16.setText("User ID:");

            jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
            jLabel17.setText("Username:");

            jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
            jLabel18.setText("Password:");

            jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
            jLabel19.setText("Email Address:");

            saveUserBtn.setBackground(new java.awt.Color(51, 51, 51));
            saveUserBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
            saveUserBtn.setForeground(new java.awt.Color(255, 255, 255));
            saveUserBtn.setText("Save Changes");
            saveUserBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    saveUserBtnActionPerformed(evt);
                }
            });

            addUserBtn.setBackground(new java.awt.Color(51, 51, 51));
            addUserBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
            addUserBtn.setForeground(new java.awt.Color(255, 255, 255));
            addUserBtn.setText("Add New");
            addUserBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    addUserBtnActionPerformed(evt);
                }
            });

            ut5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Admin", "Staff" }));

            newUserID.setText("Code here");

            jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
            jLabel20.setText("Type of User:");

            ut4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Female", "Male" }));

            jLabel25.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
            jLabel25.setText("Gender:");

            userForm.setLayer(userFormTitle, javax.swing.JLayeredPane.DEFAULT_LAYER);
            userForm.setLayer(jLabel16, javax.swing.JLayeredPane.DEFAULT_LAYER);
            userForm.setLayer(ut1, javax.swing.JLayeredPane.DEFAULT_LAYER);
            userForm.setLayer(jLabel17, javax.swing.JLayeredPane.DEFAULT_LAYER);
            userForm.setLayer(jLabel18, javax.swing.JLayeredPane.DEFAULT_LAYER);
            userForm.setLayer(jLabel19, javax.swing.JLayeredPane.DEFAULT_LAYER);
            userForm.setLayer(ut2, javax.swing.JLayeredPane.DEFAULT_LAYER);
            userForm.setLayer(saveUserBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
            userForm.setLayer(addUserBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
            userForm.setLayer(ut5, javax.swing.JLayeredPane.DEFAULT_LAYER);
            userForm.setLayer(newUserID, javax.swing.JLayeredPane.DEFAULT_LAYER);
            userForm.setLayer(ut3, javax.swing.JLayeredPane.DEFAULT_LAYER);
            userForm.setLayer(jLabel20, javax.swing.JLayeredPane.DEFAULT_LAYER);
            userForm.setLayer(ut4, javax.swing.JLayeredPane.DEFAULT_LAYER);
            userForm.setLayer(jLabel25, javax.swing.JLayeredPane.DEFAULT_LAYER);

            javax.swing.GroupLayout userFormLayout = new javax.swing.GroupLayout(userForm);
            userForm.setLayout(userFormLayout);
            userFormLayout.setHorizontalGroup(
                userFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(userFormLayout.createSequentialGroup()
                    .addGroup(userFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(userFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(userFormLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(userFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(userFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ut2, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ut1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(newUserID, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(userFormLayout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(userFormTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(userFormLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ut3, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(userFormLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ut4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(userFormLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ut5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(userFormLayout.createSequentialGroup()
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(saveUserBtn)))
                    .addContainerGap(34, Short.MAX_VALUE))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, userFormLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(addUserBtn)
                    .addGap(70, 70, 70))
            );
            userFormLayout.setVerticalGroup(
                userFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(userFormLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(userFormTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(12, 12, 12)
                    .addGroup(userFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel16)
                        .addComponent(newUserID))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(userFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ut1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGap(18, 18, 18)
                    .addGroup(userFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel18)
                        .addComponent(ut2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(userFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel19)
                        .addComponent(ut3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(userFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ut4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel25))
                    .addGap(15, 15, 15)
                    .addGroup(userFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel20)
                        .addComponent(ut5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(22, 22, 22)
                    .addComponent(addUserBtn)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(saveUserBtn)
                    .addContainerGap(90, Short.MAX_VALUE))
            );

            form.add(userForm, "card2");

            supplierFormTitle1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
            supplierFormTitle1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            supplierFormTitle1.setText("Report Filter");

            jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
            jLabel15.setText("Start Date (YYYY-MM-DD):");

            jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
            jLabel8.setText("End Date (YYYY-MM-DD):");

            jLabel32.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
            jLabel32.setText("___________________________________________________________________________________");

            jLabel33.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
            jLabel33.setText("Total number of transaction:");

            filterReportBtn.setBackground(new java.awt.Color(51, 51, 51));
            filterReportBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
            filterReportBtn.setForeground(new java.awt.Color(255, 255, 255));
            filterReportBtn.setText("Generate Report");
            filterReportBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    try {
                        filterReportBtnActionPerformed(evt);
                    } catch (Exception e) {
                        // TODO Auto-generated catch block
                        e.printStackTrace();
                    }
                }
            });

            jLabel34.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
            jLabel34.setText("Total number of items distributed:");

            jLabel35.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
            jLabel35.setText("Total number of items received:");

            jLabel36.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
            jLabel36.setText("Total Revenue:");

            jLabel37.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
            jLabel37.setText("Total Net Income:");

            r1.setText("----");

            r2.setText("----");

            r3.setText("----");

            r4.setText("----");

            r5.setText("----");

            report.setLayer(supplierFormTitle1, javax.swing.JLayeredPane.DEFAULT_LAYER);
            report.setLayer(jLabel15, javax.swing.JLayeredPane.DEFAULT_LAYER);
            report.setLayer(endDateField, javax.swing.JLayeredPane.DEFAULT_LAYER);
            report.setLayer(jLabel8, javax.swing.JLayeredPane.DEFAULT_LAYER);
            report.setLayer(jLabel32, javax.swing.JLayeredPane.DEFAULT_LAYER);
            report.setLayer(jLabel33, javax.swing.JLayeredPane.DEFAULT_LAYER);
            report.setLayer(filterReportBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
            report.setLayer(startDateField, javax.swing.JLayeredPane.DEFAULT_LAYER);
            report.setLayer(jLabel34, javax.swing.JLayeredPane.DEFAULT_LAYER);
            report.setLayer(jLabel35, javax.swing.JLayeredPane.DEFAULT_LAYER);
            report.setLayer(jLabel36, javax.swing.JLayeredPane.DEFAULT_LAYER);
            report.setLayer(jLabel37, javax.swing.JLayeredPane.DEFAULT_LAYER);
            report.setLayer(r1, javax.swing.JLayeredPane.DEFAULT_LAYER);
            report.setLayer(r2, javax.swing.JLayeredPane.DEFAULT_LAYER);
            report.setLayer(r3, javax.swing.JLayeredPane.DEFAULT_LAYER);
            report.setLayer(r4, javax.swing.JLayeredPane.DEFAULT_LAYER);
            report.setLayer(r5, javax.swing.JLayeredPane.DEFAULT_LAYER);

            javax.swing.GroupLayout reportLayout = new javax.swing.GroupLayout(report);
            report.setLayout(reportLayout);
            reportLayout.setHorizontalGroup(
                reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(reportLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(reportLayout.createSequentialGroup()
                                .addGroup(reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE))
                                .addGap(16, 16, 16)
                                .addGroup(reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(startDateField, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                                    .addComponent(endDateField))
                                .addGap(18, 18, 18)
                                .addComponent(filterReportBtn))
                            .addComponent(supplierFormTitle1, javax.swing.GroupLayout.DEFAULT_SIZE, 412, Short.MAX_VALUE)
                            .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(reportLayout.createSequentialGroup()
                            .addGroup(reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel36, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel33, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel34, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel35, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addComponent(jLabel37))
                            .addGap(18, 18, 18)
                            .addGroup(reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(r1, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                                .addComponent(r2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(r3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(r4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(r5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addContainerGap(46, Short.MAX_VALUE))
            );
            reportLayout.setVerticalGroup(
                reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(reportLayout.createSequentialGroup()
                    .addGroup(reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(reportLayout.createSequentialGroup()
                            .addComponent(supplierFormTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(startDateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(endDateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(reportLayout.createSequentialGroup()
                            .addGap(64, 64, 64)
                            .addComponent(filterReportBtn)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jLabel32)
                    .addGap(24, 24, 24)
                    .addGroup(reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel33)
                        .addComponent(r1))
                    .addGap(18, 18, 18)
                    .addGroup(reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel34)
                        .addComponent(r2))
                    .addGap(18, 18, 18)
                    .addGroup(reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel35)
                        .addComponent(r3))
                    .addGap(18, 18, 18)
                    .addGroup(reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel36)
                        .addComponent(r4))
                    .addGap(18, 18, 18)
                    .addGroup(reportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel37)
                        .addComponent(r5))
                    .addContainerGap(157, Short.MAX_VALUE))
            );

            form.add(report, "card3");

            table.setLayout(new java.awt.CardLayout());

            userTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {

                }
            ));
            userScrollTable.setViewportView(userTable);

            table.add(userScrollTable, "card2");

            ppeItemTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {

                }
            ));
            ppeItemScrollTable.setViewportView(ppeItemTable);

            table.add(ppeItemScrollTable, "card2");

            transactionTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {

                }
            ));
            transactionScrollTable.setViewportView(transactionTable);

            table.add(transactionScrollTable, "card2");

            supplierTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {

                }
            ));
            supplierScrollTable.setViewportView(supplierTable);

            table.add(supplierScrollTable, "card2");

            hospitalTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {

                }
            ));
            hospitalScrollTable.setViewportView(hospitalTable);

            table.add(hospitalScrollTable, "card3");

            delBtn.setBackground(new java.awt.Color(153, 0, 0));
            delBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
            delBtn.setForeground(new java.awt.Color(255, 255, 255));
            delBtn.setText("Delete");
            delBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    delBtnActionPerformed(evt);
                }
            });

            editBtn.setBackground(new java.awt.Color(51, 51, 51));
            editBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
            editBtn.setForeground(new java.awt.Color(255, 255, 255));
            editBtn.setText("Edit");
            editBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    editBtnActionPerformed(evt);
                }
            });

            jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
            jLabel9.setText("Enter the ID here:");

            searchBtn.setBackground(new java.awt.Color(51, 51, 51));
            searchBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
            searchBtn.setForeground(new java.awt.Color(255, 255, 255));
            searchBtn.setText("Search");
            searchBtn.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    searchBtnActionPerformed(evt);
                }
            });

            longlines.setText("_______________________________________________________________________________");

            javax.swing.GroupLayout searchpanelLayout = new javax.swing.GroupLayout(searchpanel);
            searchpanel.setLayout(searchpanelLayout);
            searchpanelLayout.setHorizontalGroup(
                searchpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(searchpanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(searchpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(searchpanelLayout.createSequentialGroup()
                            .addComponent(jLabel9)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(searchbar, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(searchBtn))
                        .addComponent(longlines, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );
            searchpanelLayout.setVerticalGroup(
                searchpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(searchpanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(searchpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(searchbar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(searchBtn))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(longlines)
                    .addContainerGap(18, Short.MAX_VALUE))
            );

            mainPanel.setLayer(label, javax.swing.JLayeredPane.DEFAULT_LAYER);
            mainPanel.setLayer(form, javax.swing.JLayeredPane.DEFAULT_LAYER);
            mainPanel.setLayer(table, javax.swing.JLayeredPane.DEFAULT_LAYER);
            mainPanel.setLayer(delBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
            mainPanel.setLayer(editBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
            mainPanel.setLayer(searchpanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

            javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
            mainPanel.setLayout(mainPanelLayout);
            mainPanelLayout.setHorizontalGroup(
                mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(mainPanelLayout.createSequentialGroup()
                    .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(mainPanelLayout.createSequentialGroup()
                            .addComponent(editBtn)
                            .addGap(18, 18, 18)
                            .addComponent(delBtn))
                        .addComponent(table, javax.swing.GroupLayout.PREFERRED_SIZE, 722, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(mainPanelLayout.createSequentialGroup()
                            .addComponent(form, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap())
                        .addComponent(searchpanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(mainPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(40, 40, 40))
            );
            mainPanelLayout.setVerticalGroup(
                mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(mainPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(label)
                    .addGap(12, 12, 12)
                    .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(mainPanelLayout.createSequentialGroup()
                            .addComponent(searchpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(form, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(mainPanelLayout.createSequentialGroup()
                            .addComponent(table, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(delBtn)
                                .addComponent(editBtn))))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap())
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 535, Short.MAX_VALUE)
                    .addContainerGap())
            );

            pack();
        }// </editor-fold>//GEN-END:initComponents
    
    //MAIN PANELS BUTTON
    private void hospitalBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospitalBtnActionPerformed
        supplierForm.setVisible(false);
        hospitalForm.setVisible(true);
        transactionForm.setVisible(false);
        userForm.setVisible(false);
        ppeitemForm.setVisible(false);
        report.setVisible(false);
        
        try {
            String newID = filefunction.generateNewID("hospitals.txt");
            newHospitalID.setText("H-"+newID);
        } catch (IOException ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Failed to generate new Hospital ID.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        label.setText("HOSPITAL MENU");
        saveHospitalBtn.setVisible(false);
        addHospitalBtn.setVisible(true);
        editBtn.setVisible(true);
        delBtn.setVisible(true);
        searchpanel.setVisible(true);
        
        supplierScrollTable.setVisible(false);  
        hospitalScrollTable.setVisible(true); 
        userScrollTable.setVisible(false);      
        ppeItemScrollTable.setVisible(false);
        transactionScrollTable.setVisible(false);
        
        DefaultTableModel model1 = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
               //all cells false
               return false;
            }
        };
        String[] ColHeadings = {"Hospital ID", "Name", "Address", "Phone Number"};
        model1.setColumnIdentifiers(ColHeadings);
        hospitalTable.setModel(model1);
        model1.setRowCount(0);
        hospitalTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        try {
            filefunction.loadDataFromFile("hospitals.txt",model1);
        } catch (Exception ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Failed to load hospital data.", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_hospitalBtnActionPerformed

    private void supplierBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierBtnActionPerformed
        supplierForm.setVisible(true);
        hospitalForm.setVisible(false);
        transactionForm.setVisible(false);
        userForm.setVisible(false);
        ppeitemForm.setVisible(false);
        report.setVisible(false);
        
        try {
            String newID = filefunction.generateNewID("suppliers.txt");
            newSupplierID.setText("S-"+newID);
        } catch (IOException ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Failed to generate new Supplier ID.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        label.setText("SUPPLIER MENU");
        saveSupplierBtn.setVisible(false);
        addSupplierBtn.setVisible(true);
        editBtn.setVisible(true);
        delBtn.setVisible(true);
        searchpanel.setVisible(true);
        
        supplierScrollTable.setVisible(true);  
        hospitalScrollTable.setVisible(false); 
        userScrollTable.setVisible(false);      
        ppeItemScrollTable.setVisible(false);
        transactionScrollTable.setVisible(false);
        
        DefaultTableModel model2 = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
               //all cells false
               return false;
            }
        };
        String[] ColHeadings = {"Supplier ID", "Name", "Address", "Phone Number"};
        model2.setColumnIdentifiers(ColHeadings);
        supplierTable.setModel(model2);
        model2.setRowCount(0);
        supplierTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        try {
            filefunction.loadDataFromFile("suppliers.txt",model2);
        } catch (Exception ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Failed to load hospital data.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_supplierBtnActionPerformed

    private void userBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userBtnActionPerformed
        supplierForm.setVisible(false);
        hospitalForm.setVisible(false);
        transactionForm.setVisible(false);
        userForm.setVisible(true);
        ppeitemForm.setVisible(false);
        report.setVisible(false);
        
        try {
        String newID = filefunction.generateNewID("users.txt");
        newUserID.setText("Staff-"+newID);
        } catch (IOException ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Failed to generate new User ID.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        label.setText("USER MENU");
        saveUserBtn.setVisible(false);
        addUserBtn.setVisible(true);
        editBtn.setVisible(true);
        delBtn.setVisible(true);
        searchpanel.setVisible(true);
        
        supplierScrollTable.setVisible(false);  
        hospitalScrollTable.setVisible(false); 
        userScrollTable.setVisible(true);      
        ppeItemScrollTable.setVisible(false);
        transactionScrollTable.setVisible(false);
        
        DefaultTableModel model3 = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
               //all cells false
               return false;
            }
        };
        String[] ColHeadings = {"User ID", "Name", "Password","Email Address","Gender", "Type of user"};
        model3.setColumnIdentifiers(ColHeadings);
        userTable.setModel(model3);
        model3.setRowCount(0);
        userTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        try {
            filefunction.loadDataFromFile("users.txt",model3);
        } catch (Exception ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_userBtnActionPerformed

    private void ppeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ppeBtnActionPerformed
        supplierForm.setVisible(false);
        hospitalForm.setVisible(false);
        transactionForm.setVisible(false);
        userForm.setVisible(false);
        ppeitemForm.setVisible(true);
        report.setVisible(false);
        
        label.setText("PPE ITEM MENU");
        editBtn.setVisible(true);
        savePPEBtn.setVisible(false);
        addPPEBtn.setVisible(true);
        delBtn.setVisible(true);
        searchpanel.setVisible(true);
        
        supplierScrollTable.setVisible(false);  
        hospitalScrollTable.setVisible(false); 
        userScrollTable.setVisible(false);      
        ppeItemScrollTable.setVisible(true);
        transactionScrollTable.setVisible(false);
        
        t3.removeAllItems();
        List<String> allSupplierIDs = filefunction.GET_ALL_ID("suppliers.txt");
        for (String id : allSupplierIDs) {
            t3.addItem(id);
        }
        
        DefaultTableModel model4 = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
               //all cells false
               return false;
            }
        };
        String[] ColHeadings = {"Item ID", "Item Name", "Supplier ID","Price", "Quantity in stock"};
        model4.setColumnIdentifiers(ColHeadings);
        ppeItemTable.setModel(model4);
        model4.setRowCount(0);
        ppeItemTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        try {
            filefunction.loadDataFromFile("ppe.txt",model4);
        } catch (Exception ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ppeBtnActionPerformed

    private void transactionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transactionBtnActionPerformed
        supplierForm.setVisible(false);
        hospitalForm.setVisible(false);
        transactionForm.setVisible(true);
        userForm.setVisible(false);
        ppeitemForm.setVisible(false);
        report.setVisible(false);
        
        label.setText("TRANSACTION MENU");
        addTransBtn.setVisible(true);
        editBtn.setVisible(false);
        delBtn.setVisible(true);
        searchpanel.setVisible(true);
        
        supplierScrollTable.setVisible(false);  
        hospitalScrollTable.setVisible(false); 
        userScrollTable.setVisible(false);      
        ppeItemScrollTable.setVisible(false);
        transactionScrollTable.setVisible(true);

        DefaultTableModel model5 = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        String[] ColHeadings = {"Transaction ID", "Item ID", "Process", "Supplier/Hospital ID", "Quantity", "Total Price", "Date"};
        model5.setColumnIdentifiers(ColHeadings);
        transactionTable.setModel(model5);
        model5.setRowCount(0);
        transactionTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        try {
            if (filefunction.isFileExists("transactions.txt")) {
                filefunction.loadDataFromFile("transactions.txt", model5);
            } else {
                filefunction.createFile("transactions.txt");
            }
            filefunction.loadDataFromFile("transactions.txt",model5);
        } catch (Exception ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_transactionBtnActionPerformed

    private void reportBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportBtnActionPerformed
        supplierForm.setVisible(false);
        hospitalForm.setVisible(false);
        transactionForm.setVisible(false);
        userForm.setVisible(false);
        ppeitemForm.setVisible(false);
        report.setVisible(true);
        
        label.setText("REPORT MENU");
        editBtn.setVisible(false);
        delBtn.setVisible(false);
        searchpanel.setVisible(false);
        
        supplierScrollTable.setVisible(false);
        hospitalScrollTable.setVisible(false);
        userScrollTable.setVisible(false);
        ppeItemScrollTable.setVisible(false);
        transactionScrollTable.setVisible(true);

        DefaultTableModel model5 = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
               //all cells false
               return false;
            }
        };
        String[] ColHeadings = {"Transaction ID", "Item ID", "Process", "Supplier/Hospital ID", "Quantity", "Total Price", "Date"};
        model5.setColumnIdentifiers(ColHeadings);
        transactionTable.setModel(model5);
        model5.setRowCount(0);
        transactionTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        try {
            filefunction.loadDataFromFile("transactions.txt",model5);
        } catch (Exception ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_reportBtnActionPerformed

    private void logoutBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutBtnMouseClicked
        int logout = JOptionPane.showConfirmDialog(this, "Are you sure you want to logout?", "Confirm", JOptionPane.YES_NO_OPTION);
        if (logout == JOptionPane.YES_OPTION) {
            new LoginSystem().setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_logoutBtnMouseClicked

    //ADD NEW DATA
    private void addPPEBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPPEBtnActionPerformed
        DefaultTableModel model = (DefaultTableModel) ppeItemTable.getModel();
        String input1 = t1.getText();
        String input2 = t2.getText();
        String input3 = (String) t3.getSelectedItem();
        String input4 = t4.getText();
        String input5 = "100";
        if (!input1.isEmpty() && !input2.isEmpty() && !input3.isEmpty()) {
            // no duplicate ID allowed
            if (filefunction.isDuplicateID("ppe.txt", input1)) {
                JOptionPane.showMessageDialog(this, "Duplicate ID found. Please enter a unique ID.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            // item name only words allowed
            if (!input2.matches("[a-zA-Z ]+")) {
                JOptionPane.showMessageDialog(this, "Item name should only contain letters and spaces.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            // quantity will give alert when less then 25, show the PPE name and quantity that less than 25
            if (Integer.parseInt(input4) < 25) {
                JOptionPane.showMessageDialog(this, "Quantity of "+input2+" is less than 25. Please add more stock.", "Warning", JOptionPane.WARNING_MESSAGE);
            }
            filefunction.ADD_DATA("ppe.txt",model, input1, input2, input3, input4);
            JOptionPane.showMessageDialog(this, "PPE item data submitted", "Message", JOptionPane.INFORMATION_MESSAGE);

            //Clear all TextField contents
            t1.setText("");
            t2.setText("");
        }
    }//GEN-LAST:event_addPPEBtnActionPerformed

    private void addHospitalBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addHospitalBtnActionPerformed
        DefaultTableModel model = (DefaultTableModel) hospitalTable.getModel();
        String input1 = ht1.getText();
        String input2 = ht2.getText();
        String input3 = ht3.getText();
        if (!input1.isEmpty() && !input2.isEmpty() && !input3.isEmpty()) {
            // name words only allowed
            if (!input1.trim().matches("[a-zA-Z ]+")) {
                JOptionPane.showMessageDialog(this, "Name should only contain letters and spaces.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            //phone number only numbers allowed without limited digits
            // phone number only numbers allowed, no limit on digits
            if (!input3.matches("\\d+")) {
                JOptionPane.showMessageDialog(this, "Phone number should only contain digits.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            filefunction.ADD_DATA("hospitals.txt",model, input1, input2, input3);
            JOptionPane.showMessageDialog(this, "Hospital data submitted", "Message", JOptionPane.INFORMATION_MESSAGE);

            // Clear all TextField contents
            ht1.setText("");
            ht2.setText("");
            ht3.setText("");
            
            try {
                String newID = filefunction.generateNewID("hospitals.txt");
                newHospitalID.setText("H-"+newID);
            } catch (IOException ex) {
                Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Failed to generate new Hospital ID.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        }
    }//GEN-LAST:event_addHospitalBtnActionPerformed

    private void addUserBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUserBtnActionPerformed
        DefaultTableModel model = (DefaultTableModel) userTable.getModel();
        String input1 = ut1.getText();
        String input2 = ut2.getText();
        String input3 = ut3.getText();
        String input4 = (String) ut4.getSelectedItem();
        String input5 = (String) ut5.getSelectedItem();
        if (!input1.isEmpty() && !input2.isEmpty() && !input3.isEmpty()&& !input4.isEmpty()&& !input5.isEmpty()) {

            filefunction.ADD_DATA("users.txt",model, input1, input2, input3,input4,input5);
            JOptionPane.showMessageDialog(this, "User data submitted", "Message", JOptionPane.INFORMATION_MESSAGE);

            // Clear all TextField contents
            ut1.setText("");
            ut2.setText("");

        }
    }//GEN-LAST:event_addUserBtnActionPerformed

    private void addSupplierBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSupplierBtnActionPerformed
        DefaultTableModel model = (DefaultTableModel) supplierTable.getModel();
        String input1 = st1.getText();
        String input2 = st2.getText();
        String input3 = st3.getText();
        if (!input1.isEmpty() && !input2.isEmpty() && !input3.isEmpty()) {
            // name words only allowed
            if (!input1.trim().matches("[a-zA-Z ]+")) {
                JOptionPane.showMessageDialog(this, "Name should only contain letters and spaces.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            //phone number only numbers allowed without limited digits
            if (!input3.matches("\\d+")) {
                JOptionPane.showMessageDialog(this, "Phone number should only contain digits.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            filefunction.ADD_DATA("suppliers.txt",model, input1, input2, input3);
            JOptionPane.showMessageDialog(this, "Supplier data submitted", "Message", JOptionPane.INFORMATION_MESSAGE);

            // Clear all TextField contents
            st1.setText("");
            st2.setText("");
            st3.setText("");
            
            try {
                String newID = filefunction.generateNewID("suppliers.txt");
                newSupplierID.setText("S-"+newID);
            } catch (IOException ex) {
                Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Failed to generate new Hospital ID.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_addSupplierBtnActionPerformed

    private void addTransBtnActionPerformed(java.awt.event.ActionEvent evt) {

        // Debug output
        System.out.println("Add Transaction button clicked");
        
        // Check if components are properly initialized
        if (tt1 == null || tt2 == null || tt3 == null || tt4 == null) {
            JOptionPane.showMessageDialog(this, "UI components are not properly initialized", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        DefaultTableModel model = (DefaultTableModel) transactionTable.getModel();
        String itemCode = (String) tt1.getSelectedItem();
        String process = (String) tt2.getSelectedItem();
        String hospitalSupplierCode = (String) tt3.getSelectedItem();
        String quantity = tt4.getText();

        //show the item code for user when click the item in the combobox
        if (itemCode.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please select an item code", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        //show the process for user when click the process in the combobox
        if (process.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please select a process", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        //show the hospital or supplier code for user when click the hospital or supplier in the combobox
        if (hospitalSupplierCode.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please select a hospital or supplier code", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        //show the quantity for user when click the quantity in the textfield
        if (quantity.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a quantity", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!itemCode.isEmpty() && !process.isEmpty() && !hospitalSupplierCode.isEmpty() && !quantity.isEmpty()) {
            try {
                int quantityValue = Integer.parseInt(quantity);
                
                // Get current stock and update it
                String ppeData = filefunction.SEARCH_DATA("ppe.txt", itemCode, this);
                if (ppeData == null) {
                    JOptionPane.showMessageDialog(this, "Item not found in PPE inventory.", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                String[] ppeFields = ppeData.split(";");
                int currentStock = Integer.parseInt(ppeFields[3]);
                int newStock = process.equals("Distribute") ? currentStock - quantityValue : currentStock + quantityValue;
                
                if (newStock < 0) {
                    JOptionPane.showMessageDialog(this, "Not enough stock available", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                
                // Update PPE stock
                ppeFields[3] = String.valueOf(newStock);
                filefunction.EDIT_DATA("ppe.txt", ppeFields);

                // Calculate total price (assuming price is stored in PPE file)
                double itemPrice = Double.parseDouble(ppeFields[4]); // Assuming price is the 5th field
                double totalPrice = quantityValue * itemPrice;

                // Get current date
                LocalDate currentDate = LocalDate.now();
                String formattedDate = currentDate.format(DateTimeFormatter.ofPattern("yyyy-MM-dd"));

                // Add new transaction
                String[] transactionData = {
                    itemCode,
                    process.equals("Distribute") ? hospitalSupplierCode : "", // Hospital ID
                    process.equals("Receive") ? hospitalSupplierCode : "",    // Supplier ID
                    String.valueOf(quantityValue),
                    String.format("%.2f", totalPrice),
                    formattedDate
                };
                
                filefunction.ADD_DATA("transactions.txt", (DefaultTableModel) transactionTable.getModel(), transactionData);

                JOptionPane.showMessageDialog(this, "Transaction data submitted", "Message", JOptionPane.INFORMATION_MESSAGE);

                // Clear input fields
                tt1.setSelectedIndex(0);
                tt2.setSelectedIndex(0);
                tt3.setSelectedIndex(0);
                tt4.setText("");
                
                // Refresh the transaction table
                refreshTransactionTable();
                
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Please enter a valid quantity", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please fill in all fields", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_addTransBtnActionPerformed

    private void refreshTransactionTable() {
        DefaultTableModel model = (DefaultTableModel) transactionTable.getModel();
        model.setRowCount(0);
        try {
            filefunction.loadDataFromFile("transactions.txt", model);
        } catch (Exception ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    //FILTER REPORT
    private void filterReportBtnActionPerformed(java.awt.event.ActionEvent evt) throws Exception {//GEN-FIRST:event_filterReportBtnActionPerformed
        String startDate = startDateField.getText();
        String endDate = endDateField.getText();

        DefaultTableModel transactionModel = (DefaultTableModel) transactionTable.getModel();

        filterTransaction(startDate,endDate,transactionModel);

        //show report
        r1.setText(String.valueOf(transactionModel.getRowCount()));
        int totalItemsDistributed = 0;
        int totalItemsReceived = 0;
        double totalNetIncome = 0.0;
        double totalRevenue = 0.0;

        for (int i = 0; i < transactionModel.getRowCount(); i++){
            int quantity = Integer.parseInt(transactionModel.getValueAt(i,4).toString());
            double price = Double.parseDouble(transactionModel.getValueAt(i, 5).toString());
            if ("Distribute".equals(transactionModel.getValueAt(i,2))){
                totalItemsDistributed += quantity;
                totalNetIncome+=price;
                totalRevenue += price;
            }else if("Receive".equals(transactionModel.getValueAt(i,2))){
                totalItemsReceived += quantity;
                totalNetIncome-=price;
            }
        }
        r2.setText(String.valueOf(totalItemsDistributed));
        r3.setText(String.valueOf(totalItemsReceived));
        r4.setText(String.format("%.2f", totalRevenue));
        r5.setText(String.format("%.2f", totalNetIncome));
    }//GEN-LAST:event_filterReportBtnActionPerformed

    public static void filterTransaction(String startDateStr, String endDateStr, DefaultTableModel model) throws Exception{
        //check date format
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        Date startDate;
        Date endDate;
        try {
            startDate = dateFormat.parse(startDateStr);
            endDate = dateFormat.parse(endDateStr);
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(null, "Please enter valid date in the format yyyy-MM-dd", "Invalid Date", JOptionPane.ERROR_MESSAGE);
            return;
        }

        List<String[]> transactions = filefunction.loadDataFromFile("transactions.txt", model);
        
        //add data to table
        model.setRowCount(0);
        for (String[] each: transactions){
            try {
                Date transactionDate = dateFormat.parse(each[6]);
                if ((transactionDate.compareTo(startDate)>=0)&& (transactionDate.compareTo(endDate)<=0)) {
                    model.addRow(each);
                }
            } catch (ParseException e) {
                e.printStackTrace();
            }
        }
    }

    //SAVE CHANGES
    private void saveUserBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveUserBtnActionPerformed
        addUserBtn.setVisible(true);
        saveUserBtn.setVisible(false);
        
        DefaultTableModel model = (DefaultTableModel)userTable.getModel();
        int sRow = userTable.getSelectedRow();
        model.setValueAt(newUserID.getText(),sRow,0);
        model.setValueAt(ut1.getText(),sRow,1);
        model.setValueAt(ut2.getText(),sRow,2);
        model.setValueAt(ut5.getSelectedItem(),sRow,3);
        
        // Prepare data for file update
        String[] newData = new String[4];
        newData[0] = newUserID.getText();
        newData[1] = ut1.getText();
        newData[2] = ut2.getText();
        newData[3] = (String) ut5.getSelectedItem();
        
        // Call file update method
        boolean actionDone = filefunction.EDIT_DATA("users.txt", newData);
        
        if (actionDone) {
            JOptionPane.showMessageDialog(rootPane, "User Data updated successfully", "Update Result", JOptionPane.INFORMATION_MESSAGE);
            
            // Clear all TextFields
            try {
                String newID = filefunction.generateNewID("users.txt");
                newHospitalID.setText("Staff-"+newID);
            } catch (IOException ex) {
                Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Failed to generate new user ID.", "Error", JOptionPane.ERROR_MESSAGE);
            }
            ut1.setText("");
            ut2.setText("");
            ut5.setSelectedItem(0);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Failed to update data", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_saveUserBtnActionPerformed

    private void saveSupplierBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveSupplierBtnActionPerformed
        addSupplierBtn.setVisible(true);
        saveSupplierBtn.setVisible(false);
        
        DefaultTableModel model = (DefaultTableModel)supplierTable.getModel();
        int sRow = supplierTable.getSelectedRow();
        model.setValueAt(newSupplierID.getText(),sRow,0);
        model.setValueAt(st1.getText(),sRow,1);
        model.setValueAt(st2.getText(),sRow,2);
        model.setValueAt(st3.getText(),sRow,3);
        
        // Prepare data for file update
        String[] newData = new String[4];
        newData[0] = newSupplierID.getText();
        newData[1] = st1.getText();
        newData[2] = st2.getText();
        newData[3] = st3.getText();
        
        // Call file update method
        boolean actionDone = filefunction.EDIT_DATA("suppliers.txt", newData);
        
        if (actionDone) {
            JOptionPane.showMessageDialog(rootPane, "Supplier Data updated successfully", "Update Result", JOptionPane.INFORMATION_MESSAGE);
            
            try {
                String newID = filefunction.generateNewID("suppliers.txt");
                newSupplierID.setText("S-"+newID);
            } catch (IOException ex) {
                Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Failed to generate new Supplier ID.", "Error", JOptionPane.ERROR_MESSAGE);
            }
            st1.setText("");
            st2.setText("");
            st3.setText("");
        } else {
            JOptionPane.showMessageDialog(rootPane, "Failed to update data", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_saveSupplierBtnActionPerformed

    private void saveHospitalBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveHospitalBtnActionPerformed
        addHospitalBtn.setVisible(true);
        saveHospitalBtn.setVisible(false);
        
        DefaultTableModel model = (DefaultTableModel)hospitalTable.getModel();
        int sRow = hospitalTable.getSelectedRow();
        model.setValueAt(newHospitalID.getText(),sRow,0);
        model.setValueAt(ht1.getText(),sRow,1);
        model.setValueAt(ht2.getText(),sRow,2);
        model.setValueAt(ht3.getText(),sRow,3);
        
        // Prepare data for file update
        String[] newData = new String[4];
        newData[0] = newHospitalID.getText();
        newData[1] = ht1.getText();
        newData[2] = ht2.getText();
        newData[3] = ht3.getText();
        
        // Call file update method
        boolean actionDone = filefunction.EDIT_DATA("hospitals.txt", newData);
        
        if (actionDone) {
            JOptionPane.showMessageDialog(rootPane, "Hospital Data updated successfully", "Update Result", JOptionPane.INFORMATION_MESSAGE);
            
            // Clear all TextFields
            try {
                String newID = filefunction.generateNewID("hospitals.txt");
                newHospitalID.setText("H-"+newID);
            } catch (IOException ex) {
                Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Failed to generate new Hospital ID.", "Error", JOptionPane.ERROR_MESSAGE);
            }
            ht1.setText("");
            ht2.setText("");
            ht3.setText("");
        } else {
            JOptionPane.showMessageDialog(rootPane, "Failed to update data", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_saveHospitalBtnActionPerformed

    private void savePPEBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savePPEBtnActionPerformed
        addPPEBtn.setVisible(true);
        savePPEBtn.setVisible(false);
        
        DefaultTableModel model = (DefaultTableModel)ppeItemTable.getModel();
        int sRow = ppeItemTable.getSelectedRow();
        model.setValueAt(t1.getText(),sRow,0);
        model.setValueAt(t2.getText(),sRow,1);
        model.setValueAt(t3.getSelectedItem(),sRow,2);
        model.setValueAt(t5.getText(),sRow,3);
        
        // Prepare data for file update
        String[] newData = new String[4];
        newData[0] = t1.getText();
        newData[1] = t2.getText();
        newData[2] = (String)t3.getSelectedItem();
        newData[3] = t5.getText();
        
        // Call file update method
        boolean actionDone = filefunction.EDIT_DATA("ppe.txt", newData);
        
        if (actionDone) {
            JOptionPane.showMessageDialog(rootPane, "PPE Item Data updated successfully", "Update Result", JOptionPane.INFORMATION_MESSAGE);
            
            t1.setText("");
            t2.setText("");
            t3.setSelectedItem(0);
            t5.setText("100");
        } else {
            JOptionPane.showMessageDialog(rootPane, "Failed to update data", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_savePPEBtnActionPerformed

    //EDIT, SEARCH AND DELETE
    private void delBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delBtnActionPerformed
        try {
            if (hospitalScrollTable.isVisible()) {
                DefaultTableModel model1 = (DefaultTableModel) hospitalTable.getModel();
                int sRow = hospitalTable.getSelectedRow();
                if (sRow >= 0) {
                    String hospitalID = model1.getValueAt(sRow, 0).toString();
                    filefunction.DELETE_DATA("hospitals.txt", hospitalID, this);  // Pass the parent component 'this'
                    model1.removeRow(sRow);  // Remove the row from the table
                    JOptionPane.showMessageDialog(this, "Hospital record deleted successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    throw new IllegalStateException("Please select a row to delete.");
                }
            } else if (supplierScrollTable.isVisible()) {
                DefaultTableModel model2 = (DefaultTableModel) supplierTable.getModel();
                int sRow = supplierTable.getSelectedRow();
                if (sRow >= 0) {
                    String supplierID = model2.getValueAt(sRow, 0).toString();
                    filefunction.DELETE_DATA("suppliers.txt", supplierID, this);  // Pass the parent component 'this'
                    model2.removeRow(sRow);
                    JOptionPane.showMessageDialog(this, "Supplier record deleted successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    throw new IllegalStateException("Please select a row to delete.");
                }
            } else if (userScrollTable.isVisible()) {
                DefaultTableModel model3 = (DefaultTableModel) userTable.getModel();
                int sRow = userTable.getSelectedRow();
                if (sRow >= 0) {
                    String userID = model3.getValueAt(sRow, 0).toString();
                    filefunction.DELETE_DATA("users.txt", userID, this);  // Pass the parent component 'this'
                    model3.removeRow(sRow);
                    JOptionPane.showMessageDialog(this, "User record deleted successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    throw new IllegalStateException("Please select a row to delete.");
                }
            } else if (ppeItemScrollTable.isVisible()) {
                DefaultTableModel model4 = (DefaultTableModel) ppeItemTable.getModel();
                int sRow = ppeItemTable.getSelectedRow();
                if (sRow >= 0) {
                    String itemID = model4.getValueAt(sRow, 0).toString();
                    filefunction.DELETE_DATA("ppe.txt", itemID, this);  // Pass the parent component 'this'
                    model4.removeRow(sRow);
                    JOptionPane.showMessageDialog(this, "PPE Item record deleted successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    throw new IllegalStateException("Please select a row to delete.");
                }
            } else if (transactionScrollTable.isVisible()){
            }
        } catch (IllegalStateException ex) {
            // Handle the exception here
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_delBtnActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        if (hospitalScrollTable.isVisible()) {
            DefaultTableModel model1 = (DefaultTableModel) hospitalTable.getModel();
            String search = searchbar.getText();
            String ID = filefunction.SEARCH_DATA("hospitals.txt", search,this);
            if (ID != null) {
                for (int i = 0; i < model1.getRowCount(); i++) {
                    if (model1.getValueAt(i, 0).toString().equals(search)) {
                        hospitalTable.setRowSelectionInterval(i, i);
                        hospitalTable.scrollRectToVisible(hospitalTable.getCellRect(i, 0, true)); //scroll to the area that can see the row
                        break;
                    }
                }
            }
        } else if (supplierScrollTable.isVisible()) {
            DefaultTableModel model2 = (DefaultTableModel) supplierTable.getModel();
            String search = searchbar.getText();
             String ID = filefunction.SEARCH_DATA("suppliers.txt", search,this);
             if (ID != null) {
                for (int i = 0; i < model2.getRowCount(); i++) {
                    if (model2.getValueAt(i, 0).toString().equals(search)) {
                        supplierTable.setRowSelectionInterval(i, i);
                        supplierTable.scrollRectToVisible(supplierTable.getCellRect(i, 0, true)); 
                        break;
                    }
                }
            }
        } else if (userScrollTable.isVisible()) {
            DefaultTableModel model3 = (DefaultTableModel) userTable.getModel();
            String search = searchbar.getText();
            String ID = filefunction.SEARCH_DATA("users.txt", search,this);
            if (ID != null) {
                for (int i = 0; i < model3.getRowCount(); i++) {
                    if (model3.getValueAt(i, 0).toString().equals(search)) {
                        userTable.setRowSelectionInterval(i, i);
                        userTable.scrollRectToVisible(userTable.getCellRect(i, 0, true)); 
                        break;
                    }
                }
            }
        } else if (ppeItemScrollTable.isVisible()) {
            DefaultTableModel model4 = (DefaultTableModel) ppeItemTable.getModel();
            String search = searchbar.getText();
            String ID = filefunction.SEARCH_DATA("ppe.txt", search,this);
            if (ID != null) {
                for (int i = 0; i < model4.getRowCount(); i++) {
                    if (model4.getValueAt(i, 0).toString().equals(search)) {
                        ppeItemTable.setRowSelectionInterval(i, i);
                        ppeItemTable.scrollRectToVisible(ppeItemTable.getCellRect(i, 0, true)); 
                        break;
                    }
                }
            }
        }else if (transactionScrollTable.isVisible()){
        }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        if (hospitalScrollTable.isVisible()) {
            hospitalFormTitle.setText("Edit Hospital Form");
            saveHospitalBtn.setVisible(true);
            addHospitalBtn.setVisible(false);

            DefaultTableModel model1 = (DefaultTableModel) hospitalTable.getModel();
            int sRow = hospitalTable.getSelectedRow();
            if (sRow >= 0) {
                newHospitalID.setText(model1.getValueAt(sRow, 0).toString());
                ht1.setText(model1.getValueAt(sRow, 1).toString());
                ht2.setText(model1.getValueAt(sRow, 2).toString());
                ht3.setText(model1.getValueAt(sRow, 3).toString());
            } else {
                JOptionPane.showMessageDialog(rootPane, "Please select a row");
            }
        } else if (supplierScrollTable.isVisible()) {
            supplierFormTitle.setText("Edit Supplier Form");
            saveSupplierBtn.setVisible(true);
            addSupplierBtn.setVisible(false);
            DefaultTableModel model2 = (DefaultTableModel) supplierTable.getModel();
            int sRow = supplierTable.getSelectedRow();
            if (sRow >= 0) {
                newSupplierID.setText(model2.getValueAt(sRow, 0).toString());
                st1.setText(model2.getValueAt(sRow, 1).toString());
                st2.setText(model2.getValueAt(sRow, 2).toString());
                st3.setText(model2.getValueAt(sRow, 3).toString());
            } else {
                JOptionPane.showMessageDialog(rootPane, "Please select a row");
            }
        } else if (userScrollTable.isVisible()) {
            userFormTitle.setText("Edit User Form");
            saveUserBtn.setVisible(true);
            addUserBtn.setVisible(false);
            DefaultTableModel model3 = (DefaultTableModel) userTable.getModel();
            int sRow = userTable.getSelectedRow();
            if (sRow >= 0) {
                newUserID.setText(model3.getValueAt(sRow, 0).toString());
                ut1.setText(model3.getValueAt(sRow, 1).toString());
                ut2.setText(model3.getValueAt(sRow, 2).toString());
                ut5.setSelectedItem(model3.getValueAt(sRow, 3).toString());
            } else {
                JOptionPane.showMessageDialog(rootPane, "Please select a row");
            }
        }else if (ppeItemScrollTable.isVisible()) {
            ppeItemFormTitle.setText("Edit PPE Item Form");
            savePPEBtn.setVisible(true); 
            addPPEBtn.setVisible(false);
            DefaultTableModel model4 = (DefaultTableModel) ppeItemTable.getModel();
            int sRow = ppeItemTable.getSelectedRow();
            if (sRow >= 0) {
                t1.setText(model4.getValueAt(sRow, 0).toString());
                t2.setText(model4.getValueAt(sRow, 1).toString());
                t3.setSelectedItem(model4.getValueAt(sRow, 2).toString());
                t5.setText(model4.getValueAt(sRow, 3).toString());
            } else {
                JOptionPane.showMessageDialog(rootPane, "Please select a row");
            }
        } else if (transactionScrollTable.isVisible()) {
        }
    }//GEN-LAST:event_editBtnActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new filefunction(() ->{
                    new AdminPage().setVisible(true);
                });
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addHospitalBtn;
    private javax.swing.JButton addPPEBtn;
    private javax.swing.JButton addSupplierBtn;
    private javax.swing.JButton addTransBtn;
    private javax.swing.JButton addUserBtn;
    private javax.swing.JButton delBtn;
    private javax.swing.JButton editBtn;
    private javax.swing.JButton filterReportBtn;
    private javax.swing.JLayeredPane form;
    private javax.swing.JButton hospitalBtn;
    private javax.swing.JLayeredPane hospitalForm;
    private javax.swing.JLabel hospitalFormTitle;
    private javax.swing.JScrollPane hospitalScrollTable;
    private javax.swing.JTable hospitalTable;
    private javax.swing.JTextField ht1;
    private javax.swing.JTextArea ht2;
    private javax.swing.JTextField ht3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTextField startDateField;
    private javax.swing.JLabel label;
    private javax.swing.JLabel logoutBtn;
    private javax.swing.JLabel longlines;
    private javax.swing.JLayeredPane mainPanel;
    private javax.swing.JLabel newHospitalID;
    private javax.swing.JLabel newSupplierID;
    private javax.swing.JLabel newTransactionID;
    private javax.swing.JLabel newUserID;
    private javax.swing.JButton ppeBtn;
    private javax.swing.JLabel ppeItemFormTitle;
    private javax.swing.JScrollPane ppeItemScrollTable;
    private javax.swing.JTable ppeItemTable;
    private javax.swing.JLayeredPane ppeitemForm;
    private javax.swing.JLabel r1;
    private javax.swing.JLabel r2;
    private javax.swing.JLabel r3;
    private javax.swing.JLabel r4;
    private javax.swing.JLabel r5;
    private javax.swing.JLayeredPane report;
    private javax.swing.JButton reportBtn;
    private javax.swing.JButton saveHospitalBtn;
    private javax.swing.JButton savePPEBtn;
    private javax.swing.JButton saveSupplierBtn;
    private javax.swing.JButton saveUserBtn;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchbar;
    private javax.swing.JPanel searchpanel;
    private javax.swing.JTextField st1;
    private javax.swing.JTextArea st2;
    private javax.swing.JTextField st3;
    private javax.swing.JTextField endDateField;
    private javax.swing.JButton supplierBtn;
    private javax.swing.JLayeredPane supplierForm;
    private javax.swing.JLabel supplierFormTitle;
    private javax.swing.JLabel supplierFormTitle1;
    private javax.swing.JScrollPane supplierScrollTable;
    private javax.swing.JTable supplierTable;
    private javax.swing.JTextField t1;
    private javax.swing.JTextField t2;
    private javax.swing.JComboBox<String> t3;
    private javax.swing.JTextField t4;
    private javax.swing.JLabel t5;
    private javax.swing.JLayeredPane table;
    private javax.swing.JButton transactionBtn;
    private javax.swing.JLayeredPane transactionForm;
    private javax.swing.JScrollPane transactionScrollTable;
    private javax.swing.JTable transactionTable;
    private javax.swing.JComboBox<String> tt1;
    private javax.swing.JComboBox<String> tt2;
    private javax.swing.JComboBox<String> tt3;
    private javax.swing.JTextField tt4;
    private javax.swing.JButton userBtn;
    private javax.swing.JLayeredPane userForm;
    private javax.swing.JLabel userFormTitle;
    private javax.swing.JScrollPane userScrollTable;
    private javax.swing.JTable userTable;
    private javax.swing.JTextField ut1;
    private javax.swing.JTextField ut2;
    private javax.swing.JTextField ut3;
    private javax.swing.JComboBox<String> ut4;
    private javax.swing.JComboBox<String> ut5;
    // End of variables declaration//GEN-END:variables
}
