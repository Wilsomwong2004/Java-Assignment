/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author songj and weisheng
 */

import java.awt.event.ItemEvent;
import java.io.File;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
 
 
 
public class AdminPage extends javax.swing.JFrame {
    private final DefaultListModel mod;
    private final String userRole;
 
 
    public AdminPage(String userRole) {
         this.userRole = userRole;
         initComponents();
         setTitle("PPE Item Inventory System");
         menu.add(panel);
         mod = new DefaultListModel();
         list.setModel(mod);
         adjustUIBasedOnRole();
     }
 
 
     /**
      * This method is called from within the constructor to initialize the form.
      * WARNING: Do NOT modify this code. The content of this method is always
      * regenerated by the Form Editor.
      */
 
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        list = new javax.swing.JList<>();
        menu = new javax.swing.JPopupMenu();
        jPanel1 = new javax.swing.JPanel();
        hospitalBtn = new javax.swing.JButton();
        supplierBtn = new javax.swing.JButton();
        userBtn = new javax.swing.JButton();
        ppeBtn = new javax.swing.JButton();
        transactionBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        logoutBtn = new javax.swing.JLabel();
        reportBtn = new javax.swing.JButton();
        mainPanel = new javax.swing.JLayeredPane();
        label = new javax.swing.JLabel();
        table = new javax.swing.JLayeredPane();
        ppeItemScrollTable = new javax.swing.JScrollPane();
        ppeItemTable = new javax.swing.JTable();
        transactionScrollTable = new javax.swing.JScrollPane();
        transactionTable = new javax.swing.JTable();
        supplierScrollTable = new javax.swing.JScrollPane();
        supplierTable = new javax.swing.JTable();
        hospitalScrollTable = new javax.swing.JScrollPane();
        hospitalTable = new javax.swing.JTable();
        userScrollTable = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();
        delBtn = new javax.swing.JButton();
        editBtn = new javax.swing.JButton();
        form = new javax.swing.JLayeredPane();
        supplierForm = new javax.swing.JLayeredPane();
        supplierFormTitle = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        st1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        st2 = new javax.swing.JTextArea();
        st3 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        newSupplierID = new javax.swing.JLabel();
        addSupplierBtn = new javax.swing.JButton();
        saveSupplierBtn = new javax.swing.JButton();
        transactionForm = new javax.swing.JLayeredPane();
        jLabel30 = new javax.swing.JLabel();
        addTransBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        newTransactionID = new javax.swing.JLabel();
        tt4 = new javax.swing.JTextField();
        tt3 = new javax.swing.JComboBox<>();
        tt1 = new javax.swing.JComboBox<>();
        tt2 = new javax.swing.JComboBox<>();
        ppeitemForm = new javax.swing.JLayeredPane();
        ppeItemFormTitle = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        t2 = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        t1 = new javax.swing.JTextField();
        t3 = new javax.swing.JComboBox<>();
        t5 = new javax.swing.JLabel();
        addPPEBtn = new javax.swing.JButton();
        savePPEBtn = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        t4 = new javax.swing.JTextField();
        ReportT = new javax.swing.JLayeredPane();
        supplierFormTitle1 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        endDateField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        filterReportBtn = new javax.swing.JButton();
        startDateField = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        r1 = new javax.swing.JLabel();
        r2 = new javax.swing.JLabel();
        r3 = new javax.swing.JLabel();
        r4 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        r5 = new javax.swing.JLabel();
        generate7days = new javax.swing.JButton();
        generate30days = new javax.swing.JButton();
        transactionReportTBtn = new javax.swing.JButton();
        itemReportTBtn = new javax.swing.JButton();
        systemReportTBtn = new javax.swing.JButton();
        ReportS = new javax.swing.JLayeredPane();
        supplierFormTitle2 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        sr1 = new javax.swing.JLabel();
        sr2 = new javax.swing.JLabel();
        sr3 = new javax.swing.JLabel();
        sr5 = new javax.swing.JLabel();
        sr4 = new javax.swing.JLabel();
        sr6 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        sr7 = new javax.swing.JLabel();
        sr8 = new javax.swing.JProgressBar();
        sr9 = new javax.swing.JProgressBar();
        female = new javax.swing.JLabel();
        staff = new javax.swing.JLabel();
        male = new javax.swing.JLabel();
        admin = new javax.swing.JLabel();
        transactionReportSBtn = new javax.swing.JButton();
        systemReportSBtn = new javax.swing.JButton();
        itemReportSBtn = new javax.swing.JButton();
        hospitalForm = new javax.swing.JLayeredPane();
        jLabel21 = new javax.swing.JLabel();
        hospitalFormTitle = new javax.swing.JLabel();
        ht1 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        ht2 = new javax.swing.JTextArea();
        ht3 = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        newHospitalID = new javax.swing.JLabel();
        addHospitalBtn = new javax.swing.JButton();
        saveHospitalBtn = new javax.swing.JButton();
        userForm = new javax.swing.JLayeredPane();
        userFormTitle = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        ut1 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        ut2 = new javax.swing.JTextField();
        saveUserBtn = new javax.swing.JButton();
        addUserBtn = new javax.swing.JButton();
        ut5 = new javax.swing.JComboBox<>();
        newUserID = new javax.swing.JLabel();
        ut3 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        ut4 = new javax.swing.JComboBox<>();
        jLabel25 = new javax.swing.JLabel();
        ReportI = new javax.swing.JLayeredPane();
        supplierFormTitle3 = new javax.swing.JLabel();
        transactionReportIBtn = new javax.swing.JButton();
        systemReportIBtn = new javax.swing.JButton();
        itemReportIBtn = new javax.swing.JButton();
        itemCodeBox = new javax.swing.JComboBox<>();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        process = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        filterItemTable = new javax.swing.JTable();
        filterItemBtn = new javax.swing.JButton();
        searchpanel = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        searchbar = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        longlines = new javax.swing.JLabel();

        list.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(list);

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
        );

        menu.setFocusable(false);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setAlignmentX(0);
        jPanel1.setAlignmentY(0);

        // hospitalBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        // hospitalBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/hospital.png"))); // NOI18N
        // hospitalBtn.setText("Hospital");
        // hospitalBtn.addActionListener(new java.awt.event.ActionListener() {
        //     public void actionPerformed(java.awt.event.ActionEvent evt) {
        //         hospitalBtnActionPerformed(evt);
        //     }
        // });

        // supplierBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        // supplierBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/supplier.png"))); // NOI18N
        // supplierBtn.setText("Supplier");
        // supplierBtn.addActionListener(new java.awt.event.ActionListener() {
        //     public void actionPerformed(java.awt.event.ActionEvent evt) {
        //         supplierBtnActionPerformed(evt);
        //     }
        // });

        // userBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        // userBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/user.png"))); // NOI18N
        // userBtn.setText("User");
        // userBtn.addActionListener(new java.awt.event.ActionListener() {
        //     public void actionPerformed(java.awt.event.ActionEvent evt) {
        //         userBtnActionPerformed(evt);
        //     }
        // });

        // ppeBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        // ppeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/ppe item.png"))); // NOI18N
        // ppeBtn.setText("PPE item");
        // ppeBtn.addActionListener(new java.awt.event.ActionListener() {
        //     public void actionPerformed(java.awt.event.ActionEvent evt) {
        //         ppeBtnActionPerformed(evt);
        //     }
        // });

        // transactionBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        // transactionBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/transaction.png"))); // NOI18N
        // transactionBtn.setText("Transaction");
        // transactionBtn.addActionListener(new java.awt.event.ActionListener() {
        //     public void actionPerformed(java.awt.event.ActionEvent evt) {
        //         transactionBtnActionPerformed(evt);
        //     }
        // });

        // jLabel1.setFont(new java.awt.Font("Ravie", 1, 36)); // NOI18N
        // jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        // jLabel1.setText("ADMIN PAGE");

        // logoutBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        // logoutBtn.setForeground(new java.awt.Color(255, 255, 255));
        // logoutBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/log out.png"))); // NOI18N
        // logoutBtn.setText("Log Out");
        // logoutBtn.setFocusable(true);
        // logoutBtn.addMouseListener(new java.awt.event.MouseAdapter() {
        //     public void mouseClicked(java.awt.event.MouseEvent evt) {
        //         logoutBtnMouseClicked(evt);
        //     }
        // });

        // reportBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        // reportBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/report.png"))); // NOI18N
        // reportBtn.setText("     Report");
        // reportBtn.addActionListener(new java.awt.event.ActionListener() {
        //     public void actionPerformed(java.awt.event.ActionEvent evt) {
        //         reportBtnActionPerformed(evt);
        //     }
        // });

        hospitalBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        //hospitalBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("./pic/hospital.png"))); // NOI18N
        //URL hospitalImageURL = getClass().getResource("./resources/pic/hospital.png");
        //System.out.println("Hospital image URL: " + hospitalImageURL);
        //if (hospitalImageURL != null) {
        //    hospitalBtn.setIcon(new ImageIcon(hospitalImageURL));
        //} else {
        //    System.err.println("Resource not found: /pic/hospital.png");
        //}
        ImageIcon hospitalIcon = ResourceLoader.loadIcon("/pic/hospital.png");
        if (hospitalIcon != null) {
            hospitalBtn.setIcon(hospitalIcon);
        }
        hospitalBtn.setText("Hospital");
        hospitalBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospitalBtnActionPerformed(evt);
            }
        });

        supplierBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        //supplierBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("./pic/supplier.png"))); // NOI18N
        //URL supplierImageURL = getClass().getResource("/pic/supplier.png");
        //if (supplierImageURL != null) {
        //    supplierBtn.setIcon(new ImageIcon(supplierImageURL));
        //} else {
        //    System.err.println("Resource not found: /pic/supplier.png");
        //}
        ImageIcon supplierIcon = ResourceLoader.loadIcon("/pic/supplier.png");
        if (supplierIcon != null) {
            supplierBtn.setIcon(supplierIcon);
        }

        supplierBtn.setText("Supplier");
        supplierBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierBtnActionPerformed(evt);
            }
        });

        userBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        //userBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("./pic/user.png"))); // NOI18N
        //URL userImageURL = getClass().getResource("/pic/user.png");
        //if (userImageURL != null) {
        //    userBtn.setIcon(new ImageIcon(userImageURL));
        //} else {
        //    System.err.println("Resource not found: /pic/user.png");
        //}
        ImageIcon userIcon = ResourceLoader.loadIcon("/pic/user.png");
        if (userIcon != null) {
            userBtn.setIcon(userIcon);
        }
        userBtn.setText("User");
        userBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userBtnActionPerformed(evt);
            }
        });

        ppeBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        //ppeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("./pic/ppe item.png"))); // NOI18N
        //URL ppeImageURL = getClass().getResource("/pic/ppe item.png");
        //if (ppeImageURL != null) {
        //    ppeBtn.setIcon(new ImageIcon(ppeImageURL));
        //} else {
        //    System.err.println("Resource not found: /pic/ppe item.png");
        //}
        ImageIcon ppeIcon = ResourceLoader.loadIcon("/pic/ppe item.png");
        if (ppeIcon != null) {
            ppeBtn.setIcon(ppeIcon);
        }
        ppeBtn.setText("PPE item");
        ppeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ppeBtnActionPerformed(evt);
            }
        });

        transactionBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        //transactionBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("./pic/transaction.png"))); // NOI18N
        //URL transactionImageURL = getClass().getResource("/pic/transaction.png");
        //if (transactionImageURL != null) {
        //    transactionBtn.setIcon(new ImageIcon(transactionImageURL));
        //} else {
        //    System.err.println("Resource not found: /pic/transaction.png");
        //}
        ImageIcon transactionIcon = ResourceLoader.loadIcon("/pic/transaction.png");
        if (transactionIcon != null) {
            transactionBtn.setIcon(transactionIcon);
        }
        transactionBtn.setText("Transaction");
        transactionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transactionBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Ravie", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("ADMIN PAGE");

        logoutBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        logoutBtn.setForeground(new java.awt.Color(255, 255, 255));
        ////logoutBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("./pic/log out.png"))); // NOI18N
        //URL logoutImageURL = getClass().getResource("/pic/log out.png");
        //if (logoutImageURL != null) {
        //    logoutBtn.setIcon(new ImageIcon(logoutImageURL));
        //} else {
        //    System.err.println("Resource not found: /pic/log out.png");
        //}
        ImageIcon logoutIcon = ResourceLoader.loadIcon("/pic/log out.png");
        if (logoutIcon != null) {
            logoutBtn.setIcon(logoutIcon);
        }
        logoutBtn.setText("Log Out");
        logoutBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutBtnMouseClicked(evt);
            }
        });

        reportBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        // reportBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/report.png"))); // NOI18N
        // reportBtn.setText("     Report");
        // reportBtn.addActionListener(new java.awt.event.ActionListener() {
        //     public void actionPerformed(java.awt.event.ActionEvent evt) {
        //         reportBtnActionPerformed(evt);
        //     }
        // });
        ImageIcon reportIcon = ResourceLoader.loadIcon("/pic/report.png");
        if (reportIcon != null) {
            reportBtn.setIcon(reportIcon);
        }
        reportBtn.setText("     Report");
        reportBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(hospitalBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(supplierBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ppeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(transactionBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(userBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reportBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 619, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(logoutBtn)
                        .addGap(17, 17, 17))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(logoutBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hospitalBtn)
                    .addComponent(supplierBtn)
                    .addComponent(userBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reportBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ppeBtn)
                    .addComponent(transactionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        label.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label.setText("PLEASE CLICK ANY BUTTON ABOVE TO PROCEED TO THEIR PAGE");

        table.setLayout(new java.awt.CardLayout());

        ppeItemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        ppeItemTable.setGridColor(new java.awt.Color(51, 51, 51));
        ppeItemScrollTable.setViewportView(ppeItemTable);

        table.add(ppeItemScrollTable, "card2");

        transactionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        transactionScrollTable.setViewportView(transactionTable);

        table.add(transactionScrollTable, "card2");

        supplierTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        supplierScrollTable.setViewportView(supplierTable);

        table.add(supplierScrollTable, "card2");

        hospitalTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        hospitalScrollTable.setViewportView(hospitalTable);

        table.add(hospitalScrollTable, "card3");

        userTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        userScrollTable.setViewportView(userTable);

        table.add(userScrollTable, "card2");

        delBtn.setBackground(new java.awt.Color(153, 0, 0));
        delBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        delBtn.setForeground(new java.awt.Color(255, 255, 255));
        delBtn.setText("Delete");
        delBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delBtnActionPerformed(evt);
            }
        });

        editBtn.setBackground(new java.awt.Color(51, 51, 51));
        editBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        editBtn.setForeground(new java.awt.Color(255, 255, 255));
        editBtn.setText("Edit");
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });

        form.setLayout(new java.awt.CardLayout());

        supplierFormTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        supplierFormTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        supplierFormTitle.setText("New Supplier Form");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel12.setText("Supplier ID:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("Name:");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel13.setText("Address:");

        st2.setColumns(20);
        st2.setRows(5);
        jScrollPane4.setViewportView(st2);

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel14.setText("Phone Number:");

        newSupplierID.setText("Code here");

        addSupplierBtn.setBackground(new java.awt.Color(51, 51, 51));
        addSupplierBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        addSupplierBtn.setForeground(new java.awt.Color(255, 255, 255));
        addSupplierBtn.setText("Add New");
        addSupplierBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSupplierBtnActionPerformed(evt);
            }
        });

        saveSupplierBtn.setBackground(new java.awt.Color(51, 51, 51));
        saveSupplierBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        saveSupplierBtn.setForeground(new java.awt.Color(255, 255, 255));
        saveSupplierBtn.setText("Save Changes");
        saveSupplierBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveSupplierBtnActionPerformed(evt);
            }
        });

        supplierForm.setLayer(supplierFormTitle, javax.swing.JLayeredPane.DEFAULT_LAYER);
        supplierForm.setLayer(jLabel12, javax.swing.JLayeredPane.DEFAULT_LAYER);
        supplierForm.setLayer(st1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        supplierForm.setLayer(jLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        supplierForm.setLayer(jLabel13, javax.swing.JLayeredPane.DEFAULT_LAYER);
        supplierForm.setLayer(jScrollPane4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        supplierForm.setLayer(st3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        supplierForm.setLayer(jLabel14, javax.swing.JLayeredPane.DEFAULT_LAYER);
        supplierForm.setLayer(newSupplierID, javax.swing.JLayeredPane.DEFAULT_LAYER);
        supplierForm.setLayer(addSupplierBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
        supplierForm.setLayer(saveSupplierBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout supplierFormLayout = new javax.swing.GroupLayout(supplierForm);
        supplierForm.setLayout(supplierFormLayout);
        supplierFormLayout.setHorizontalGroup(
            supplierFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(supplierFormLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(supplierFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(supplierFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(saveSupplierBtn)
                        .addComponent(addSupplierBtn)
                        .addGroup(supplierFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(supplierFormLayout.createSequentialGroup()
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(newSupplierID, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(supplierFormLayout.createSequentialGroup()
                                .addGroup(supplierFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel14))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(supplierFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                                    .addComponent(st1)
                                    .addGroup(supplierFormLayout.createSequentialGroup()
                                        .addComponent(st3, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))))
                    .addComponent(supplierFormTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(71, Short.MAX_VALUE))
        );
        supplierFormLayout.setVerticalGroup(
            supplierFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(supplierFormLayout.createSequentialGroup()
                .addComponent(supplierFormTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(supplierFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(newSupplierID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(supplierFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(st1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(supplierFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(supplierFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(st3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addSupplierBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveSupplierBtn)
                .addContainerGap(272, Short.MAX_VALUE))
        );

        form.add(supplierForm, "card3");

        jLabel30.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel30.setText("New Transaction Form");

        addTransBtn.setBackground(new java.awt.Color(51, 51, 51));
        addTransBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        addTransBtn.setForeground(new java.awt.Color(255, 255, 255));
        addTransBtn.setText("Add New");
        addTransBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTransBtnActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Transaction ID:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Item Code:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Process:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Hospital / Supplier Code:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Quantity:");

        newTransactionID.setText("Code here");

        tt2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Distribute", "Receive" }));

        transactionForm.setLayer(jLabel30, javax.swing.JLayeredPane.DEFAULT_LAYER);
        transactionForm.setLayer(addTransBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
        transactionForm.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        transactionForm.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        transactionForm.setLayer(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        transactionForm.setLayer(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        transactionForm.setLayer(jLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        transactionForm.setLayer(newTransactionID, javax.swing.JLayeredPane.DEFAULT_LAYER);
        transactionForm.setLayer(tt4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        transactionForm.setLayer(tt3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        transactionForm.setLayer(tt1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        transactionForm.setLayer(tt2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout transactionFormLayout = new javax.swing.GroupLayout(transactionForm);
        transactionForm.setLayout(transactionFormLayout);
        transactionFormLayout.setHorizontalGroup(
            transactionFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(transactionFormLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(transactionFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(addTransBtn)
                    .addGroup(transactionFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(transactionFormLayout.createSequentialGroup()
                            .addGroup(transactionFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4)
                                .addComponent(jLabel5)
                                .addComponent(jLabel6))
                            .addGroup(transactionFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(transactionFormLayout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addGroup(transactionFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(newTransactionID, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(tt1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(tt2, 0, 136, Short.MAX_VALUE)))
                                .addGroup(transactionFormLayout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(tt4))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, transactionFormLayout.createSequentialGroup()
                                    .addGap(12, 12, 12)
                                    .addComponent(tt3, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(82, Short.MAX_VALUE))
        );
        transactionFormLayout.setVerticalGroup(
            transactionFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(transactionFormLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(transactionFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newTransactionID)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(transactionFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(transactionFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tt2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(transactionFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tt3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(transactionFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tt4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(67, 67, 67)
                .addComponent(addTransBtn)
                .addContainerGap(256, Short.MAX_VALUE))
        );

        form.add(transactionForm, "card2");

        ppeItemFormTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        ppeItemFormTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ppeItemFormTitle.setText("New PPE Item Form");

        jLabel26.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel26.setText("Item ID:");

        jLabel27.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel27.setText("Item Name:");

        jLabel28.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel28.setText("Supplier ID:");

        jLabel29.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel29.setText("Quantity In Stock:");

        t5.setText("100");

        addPPEBtn.setBackground(new java.awt.Color(51, 51, 51));
        addPPEBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        addPPEBtn.setForeground(new java.awt.Color(255, 255, 255));
        addPPEBtn.setText("Add New");
        addPPEBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPPEBtnActionPerformed(evt);
            }
        });

        savePPEBtn.setBackground(new java.awt.Color(51, 51, 51));
        savePPEBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        savePPEBtn.setForeground(new java.awt.Color(255, 255, 255));
        savePPEBtn.setText("Save Changes");
        savePPEBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savePPEBtnActionPerformed(evt);
            }
        });

        jLabel31.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel31.setText("Price:");

        ppeitemForm.setLayer(ppeItemFormTitle, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ppeitemForm.setLayer(jLabel26, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ppeitemForm.setLayer(t2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ppeitemForm.setLayer(jLabel27, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ppeitemForm.setLayer(jLabel28, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ppeitemForm.setLayer(jLabel29, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ppeitemForm.setLayer(t1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ppeitemForm.setLayer(t3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ppeitemForm.setLayer(t5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ppeitemForm.setLayer(addPPEBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ppeitemForm.setLayer(savePPEBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ppeitemForm.setLayer(jLabel31, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ppeitemForm.setLayer(t4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout ppeitemFormLayout = new javax.swing.GroupLayout(ppeitemForm);
        ppeitemForm.setLayout(ppeitemFormLayout);
        ppeitemFormLayout.setHorizontalGroup(
            ppeitemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ppeitemFormLayout.createSequentialGroup()
                .addGroup(ppeitemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(savePPEBtn)
                    .addComponent(addPPEBtn)
                    .addGroup(ppeitemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(ppeitemFormLayout.createSequentialGroup()
                            .addComponent(jLabel29)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(t5, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(ppeitemFormLayout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(ppeItemFormTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(ppeitemFormLayout.createSequentialGroup()
                            .addGroup(ppeitemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel28, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel27, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                                .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(42, 42, 42)
                            .addGroup(ppeitemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(t1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(t2, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(t3, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(t4, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(85, Short.MAX_VALUE))
        );
        ppeitemFormLayout.setVerticalGroup(
            ppeitemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ppeitemFormLayout.createSequentialGroup()
                .addComponent(ppeItemFormTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(ppeitemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ppeitemFormLayout.createSequentialGroup()
                        .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addGroup(ppeitemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel27)
                            .addComponent(t2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(ppeitemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel28)
                            .addComponent(t3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(t1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ppeitemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(t4)
                    .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20)
                .addGroup(ppeitemFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(t5)
                    .addComponent(jLabel29))
                .addGap(42, 42, 42)
                .addComponent(addPPEBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(savePPEBtn)
                .addGap(126, 126, 126))
        );

        form.add(ppeitemForm, "card4");

        supplierFormTitle1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        supplierFormTitle1.setForeground(new java.awt.Color(51, 51, 51));
        supplierFormTitle1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        supplierFormTitle1.setText("Transaction Report");

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel15.setText("Start Date:");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setText("End Date:");

        jLabel32.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel32.setText("__________________________________________________________________________________________________");

        jLabel33.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel33.setText("Total number of transaction:");

        filterReportBtn.setBackground(new java.awt.Color(51, 51, 51));
        filterReportBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        filterReportBtn.setForeground(new java.awt.Color(255, 255, 255));
        filterReportBtn.setText("Filter & Generate");
        filterReportBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    filterReportBtnActionPerformed(evt);
                } catch (Exception ex) {
                }
            }
        });

        jLabel34.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel34.setText("Total number of items distributed:");

        jLabel35.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel35.setText("Total number of items received:");

        jLabel36.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel36.setText("Total revenue:");

        r1.setText("----");

        r2.setText("----");

        r3.setText("----");

        r4.setText("----");

        jLabel37.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel37.setText("Total Net Income:");

        r5.setText("----");

        generate7days.setBackground(new java.awt.Color(51, 51, 51));
        generate7days.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        generate7days.setForeground(new java.awt.Color(255, 255, 255));
        generate7days.setText("Last 7 days");
        generate7days.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generate7daysActionPerformed(evt);
            }
        });

        generate30days.setBackground(new java.awt.Color(51, 51, 51));
        generate30days.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        generate30days.setForeground(new java.awt.Color(255, 255, 255));
        generate30days.setText("Last 30 days");
        generate30days.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generate30daysActionPerformed(evt);
            }
        });

        transactionReportTBtn.setBackground(new java.awt.Color(102, 0, 51));
        transactionReportTBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        transactionReportTBtn.setForeground(new java.awt.Color(255, 255, 255));
        transactionReportTBtn.setText("Transaction Report");

        itemReportTBtn.setBackground(new java.awt.Color(102, 0, 51));
        itemReportTBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        itemReportTBtn.setForeground(new java.awt.Color(255, 255, 255));
        itemReportTBtn.setText("Item Report");
        itemReportTBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemReportTBtnActionPerformed(evt);
            }
        });

        systemReportTBtn.setBackground(new java.awt.Color(102, 0, 51));
        systemReportTBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        systemReportTBtn.setForeground(new java.awt.Color(255, 255, 255));
        systemReportTBtn.setText("System Report");
        systemReportTBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                systemReportTBtnActionPerformed(evt);
            }
        });

        ReportT.setLayer(supplierFormTitle1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportT.setLayer(jLabel15, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportT.setLayer(endDateField, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportT.setLayer(jLabel8, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportT.setLayer(jLabel32, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportT.setLayer(jLabel33, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportT.setLayer(filterReportBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportT.setLayer(startDateField, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportT.setLayer(jLabel34, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportT.setLayer(jLabel35, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportT.setLayer(jLabel36, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportT.setLayer(r1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportT.setLayer(r2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportT.setLayer(r3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportT.setLayer(r4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportT.setLayer(jLabel37, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportT.setLayer(r5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportT.setLayer(generate7days, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportT.setLayer(generate30days, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportT.setLayer(transactionReportTBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportT.setLayer(itemReportTBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportT.setLayer(systemReportTBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout ReportTLayout = new javax.swing.GroupLayout(ReportT);
        ReportT.setLayout(ReportTLayout);
        ReportTLayout.setHorizontalGroup(
            ReportTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReportTLayout.createSequentialGroup()
                .addComponent(transactionReportTBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(systemReportTBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(itemReportTBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(ReportTLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ReportTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ReportTLayout.createSequentialGroup()
                        .addComponent(supplierFormTitle1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(ReportTLayout.createSequentialGroup()
                        .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(ReportTLayout.createSequentialGroup()
                        .addGroup(ReportTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ReportTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel35, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel33, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel34, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel36)
                            .addComponent(jLabel37))
                        .addGap(18, 18, 18)
                        .addGroup(ReportTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(r5, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                            .addGroup(ReportTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(r1, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                                .addComponent(r2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(r3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(r4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(46, 46, 46))
                    .addGroup(ReportTLayout.createSequentialGroup()
                        .addComponent(generate7days, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(generate30days, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(ReportTLayout.createSequentialGroup()
                        .addGroup(ReportTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE))
                        .addGap(16, 16, 16)
                        .addGroup(ReportTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(startDateField)
                            .addComponent(endDateField))
                        .addGap(18, 18, 18)
                        .addComponent(filterReportBtn)
                        .addGap(30, 30, 30))))
        );
        ReportTLayout.setVerticalGroup(
            ReportTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ReportTLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ReportTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(systemReportTBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(transactionReportTBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(itemReportTBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(supplierFormTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ReportTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ReportTLayout.createSequentialGroup()
                        .addGroup(ReportTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(startDateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(ReportTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(endDateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ReportTLayout.createSequentialGroup()
                        .addComponent(filterReportBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(jLabel32)
                .addGap(18, 18, 18)
                .addGroup(ReportTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(generate30days)
                    .addComponent(generate7days))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ReportTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(r1))
                .addGap(18, 18, 18)
                .addGroup(ReportTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(r2))
                .addGap(18, 18, 18)
                .addGroup(ReportTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35)
                    .addComponent(r3))
                .addGap(18, 18, 18)
                .addGroup(ReportTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(r4))
                .addGap(18, 18, 18)
                .addGroup(ReportTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(r5))
                .addGap(37, 37, 37))
        );

        form.add(ReportT, "card3");

        supplierFormTitle2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        supplierFormTitle2.setForeground(new java.awt.Color(51, 51, 51));
        supplierFormTitle2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        supplierFormTitle2.setText("System Report");

        jLabel10.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(102, 0, 51));
        jLabel10.setText("HOSPITAL");

        jLabel11.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(102, 0, 51));
        jLabel11.setText("SUPPLIER");

        jLabel38.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(102, 0, 51));
        jLabel38.setText("USER");

        jLabel39.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel39.setText("Total number:");

        jLabel40.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel40.setText("___________________________________________________________________");

        jLabel41.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel41.setText("Total number of active hospital:");

        jLabel42.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel42.setText("Most loyal hospital:");

        jLabel43.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel43.setText("___________________________________________________________________");

        jLabel44.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel44.setText("Total number:");

        jLabel45.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel45.setText("Total number of active supplier:");

        jLabel46.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel46.setText("Most popular supplier:");

        sr1.setText("jLabel52");

        sr2.setText("jLabel52");

        sr3.setText("jLabel52");

        sr5.setText("jLabel52");

        sr4.setText("jLabel52");

        sr6.setText("jLabel52");

        jLabel47.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel47.setText("Total number:");

        sr7.setText("jLabel52");

        sr8.setBackground(new java.awt.Color(255, 255, 255));
        sr8.setForeground(new java.awt.Color(102, 0, 102));
        sr8.setBorder(null);

        sr9.setBorder(null);

        female.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        female.setText("Female");

        staff.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        staff.setText("Staff");

        male.setText("Male");

        admin.setText("Admin");

        transactionReportSBtn.setBackground(new java.awt.Color(102, 0, 51));
        transactionReportSBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        transactionReportSBtn.setForeground(new java.awt.Color(255, 255, 255));
        transactionReportSBtn.setText("Transaction Report");
        transactionReportSBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transactionReportSBtnActionPerformed(evt);
            }
        });

        systemReportSBtn.setBackground(new java.awt.Color(102, 0, 51));
        systemReportSBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        systemReportSBtn.setForeground(new java.awt.Color(255, 255, 255));
        systemReportSBtn.setText("System Report");

        itemReportSBtn.setBackground(new java.awt.Color(102, 0, 51));
        itemReportSBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        itemReportSBtn.setForeground(new java.awt.Color(255, 255, 255));
        itemReportSBtn.setText("Item Report");
        itemReportSBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemReportSBtnActionPerformed(evt);
            }
        });

        ReportS.setLayer(supplierFormTitle2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportS.setLayer(jLabel10, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportS.setLayer(jLabel11, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportS.setLayer(jLabel38, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportS.setLayer(jLabel39, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportS.setLayer(jLabel40, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportS.setLayer(jLabel41, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportS.setLayer(jLabel42, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportS.setLayer(jLabel43, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportS.setLayer(jLabel44, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportS.setLayer(jLabel45, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportS.setLayer(jLabel46, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportS.setLayer(sr1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportS.setLayer(sr2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportS.setLayer(sr3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportS.setLayer(sr5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportS.setLayer(sr4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportS.setLayer(sr6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportS.setLayer(jLabel47, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportS.setLayer(sr7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportS.setLayer(sr8, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportS.setLayer(sr9, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportS.setLayer(female, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportS.setLayer(staff, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportS.setLayer(male, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportS.setLayer(admin, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportS.setLayer(transactionReportSBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportS.setLayer(systemReportSBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportS.setLayer(itemReportSBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout ReportSLayout = new javax.swing.GroupLayout(ReportS);
        ReportS.setLayout(ReportSLayout);
        ReportSLayout.setHorizontalGroup(
            ReportSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReportSLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ReportSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ReportSLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(ReportSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(ReportSLayout.createSequentialGroup()
                                .addComponent(staff, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sr8, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(admin, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(ReportSLayout.createSequentialGroup()
                                .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sr7, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(ReportSLayout.createSequentialGroup()
                                .addComponent(female, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sr9, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(male, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(ReportSLayout.createSequentialGroup()
                                .addGroup(ReportSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(ReportSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(sr4, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sr5, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sr6, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(ReportSLayout.createSequentialGroup()
                                .addGroup(ReportSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel39, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel41, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel42, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(ReportSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(sr1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sr2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sr3, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(120, 120, 120))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ReportSLayout.createSequentialGroup()
                        .addGroup(ReportSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ReportSLayout.createSequentialGroup()
                                .addComponent(transactionReportSBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(systemReportSBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(itemReportSBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(supplierFormTitle2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        ReportSLayout.setVerticalGroup(
            ReportSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReportSLayout.createSequentialGroup()
                .addGroup(ReportSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(systemReportSBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(transactionReportSBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(itemReportSBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(supplierFormTitle2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ReportSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel39)
                    .addComponent(sr1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ReportSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel41)
                    .addComponent(sr2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ReportSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel42)
                    .addComponent(sr3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel40)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addGap(10, 10, 10)
                .addGroup(ReportSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ReportSLayout.createSequentialGroup()
                        .addComponent(jLabel44)
                        .addGap(12, 12, 12)
                        .addComponent(jLabel45)
                        .addGap(14, 14, 14)
                        .addComponent(jLabel46))
                    .addGroup(ReportSLayout.createSequentialGroup()
                        .addComponent(sr4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sr5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sr6)))
                .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ReportSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel47)
                    .addComponent(sr7))
                .addGap(18, 18, 18)
                .addGroup(ReportSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(sr8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(admin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(staff, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ReportSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(sr9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(male, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(female, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
        );

        form.add(ReportS, "card3");

        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel21.setText("Hospital ID:");

        hospitalFormTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        hospitalFormTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        hospitalFormTitle.setText("New Hospital Form");

        jLabel22.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel22.setText("Name:");

        jLabel23.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel23.setText("Address:");

        ht2.setColumns(20);
        ht2.setRows(5);
        jScrollPane6.setViewportView(ht2);

        jLabel24.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel24.setText("Phone Number:");

        newHospitalID.setText("Code here");

        addHospitalBtn.setBackground(new java.awt.Color(51, 51, 51));
        addHospitalBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        addHospitalBtn.setForeground(new java.awt.Color(255, 255, 255));
        addHospitalBtn.setText("Add New");
        addHospitalBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addHospitalBtnActionPerformed(evt);
            }
        });

        saveHospitalBtn.setBackground(new java.awt.Color(51, 51, 51));
        saveHospitalBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        saveHospitalBtn.setForeground(new java.awt.Color(255, 255, 255));
        saveHospitalBtn.setText("Save Changes");
        saveHospitalBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveHospitalBtnActionPerformed(evt);
            }
        });

        hospitalForm.setLayer(jLabel21, javax.swing.JLayeredPane.DEFAULT_LAYER);
        hospitalForm.setLayer(hospitalFormTitle, javax.swing.JLayeredPane.DEFAULT_LAYER);
        hospitalForm.setLayer(ht1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        hospitalForm.setLayer(jLabel22, javax.swing.JLayeredPane.DEFAULT_LAYER);
        hospitalForm.setLayer(jLabel23, javax.swing.JLayeredPane.DEFAULT_LAYER);
        hospitalForm.setLayer(jScrollPane6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        hospitalForm.setLayer(ht3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        hospitalForm.setLayer(jLabel24, javax.swing.JLayeredPane.DEFAULT_LAYER);
        hospitalForm.setLayer(newHospitalID, javax.swing.JLayeredPane.DEFAULT_LAYER);
        hospitalForm.setLayer(addHospitalBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
        hospitalForm.setLayer(saveHospitalBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout hospitalFormLayout = new javax.swing.GroupLayout(hospitalForm);
        hospitalForm.setLayout(hospitalFormLayout);
        hospitalFormLayout.setHorizontalGroup(
            hospitalFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hospitalFormLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(hospitalFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hospitalFormTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(hospitalFormLayout.createSequentialGroup()
                        .addGroup(hospitalFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(saveHospitalBtn)
                            .addComponent(addHospitalBtn)
                            .addGroup(hospitalFormLayout.createSequentialGroup()
                                .addGroup(hospitalFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel24))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(hospitalFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(ht3, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(newHospitalID, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)
                                    .addComponent(ht1))))
                        .addGap(81, 81, 81)))
                .addContainerGap())
        );
        hospitalFormLayout.setVerticalGroup(
            hospitalFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hospitalFormLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(hospitalFormTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(hospitalFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(newHospitalID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(hospitalFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ht1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addGap(18, 18, 18)
                .addGroup(hospitalFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(hospitalFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ht3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24))
                .addGap(18, 18, 18)
                .addComponent(addHospitalBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveHospitalBtn)
                .addContainerGap(257, Short.MAX_VALUE))
        );

        form.add(hospitalForm, "card4");

        userFormTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        userFormTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        userFormTitle.setText("New User Form");

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel16.setText("User ID:");

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel17.setText("Username:");

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel18.setText("Password:");

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel19.setText("Email Address:");

        saveUserBtn.setBackground(new java.awt.Color(51, 51, 51));
        saveUserBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        saveUserBtn.setForeground(new java.awt.Color(255, 255, 255));
        saveUserBtn.setText("Save Changes");
        saveUserBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveUserBtnActionPerformed(evt);
            }
        });

        addUserBtn.setBackground(new java.awt.Color(51, 51, 51));
        addUserBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        addUserBtn.setForeground(new java.awt.Color(255, 255, 255));
        addUserBtn.setText("Add New");
        addUserBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUserBtnActionPerformed(evt);
            }
        });

        ut5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Admin", "Staff" }));

        newUserID.setText("Code here");

        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel20.setText("Type of User:");

        ut4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Female", "Male" }));

        jLabel25.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel25.setText("Gender:");

        userForm.setLayer(userFormTitle, javax.swing.JLayeredPane.DEFAULT_LAYER);
        userForm.setLayer(jLabel16, javax.swing.JLayeredPane.DEFAULT_LAYER);
        userForm.setLayer(ut1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        userForm.setLayer(jLabel17, javax.swing.JLayeredPane.DEFAULT_LAYER);
        userForm.setLayer(jLabel18, javax.swing.JLayeredPane.DEFAULT_LAYER);
        userForm.setLayer(jLabel19, javax.swing.JLayeredPane.DEFAULT_LAYER);
        userForm.setLayer(ut2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        userForm.setLayer(saveUserBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
        userForm.setLayer(addUserBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
        userForm.setLayer(ut5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        userForm.setLayer(newUserID, javax.swing.JLayeredPane.DEFAULT_LAYER);
        userForm.setLayer(ut3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        userForm.setLayer(jLabel20, javax.swing.JLayeredPane.DEFAULT_LAYER);
        userForm.setLayer(ut4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        userForm.setLayer(jLabel25, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout userFormLayout = new javax.swing.GroupLayout(userForm);
        userForm.setLayout(userFormLayout);
        userFormLayout.setHorizontalGroup(
            userFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userFormLayout.createSequentialGroup()
                .addGroup(userFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(userFormLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(userFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(userFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ut1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newUserID, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(userFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(userFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(saveUserBtn)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, userFormLayout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(addUserBtn)
                                        .addGap(4, 4, 4)))
                                .addComponent(ut2, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(userFormLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(userFormTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(userFormLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ut3, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(userFormLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ut4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(userFormLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ut5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(66, 66, 66))
        );
        userFormLayout.setVerticalGroup(
            userFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userFormLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(userFormTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(userFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(newUserID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(userFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ut1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(userFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(ut2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(userFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(ut3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(userFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ut4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25))
                .addGap(15, 15, 15)
                .addGroup(userFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(ut5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addUserBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(saveUserBtn)
                .addContainerGap(248, Short.MAX_VALUE))
        );

        form.add(userForm, "card2");

        supplierFormTitle3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        supplierFormTitle3.setForeground(new java.awt.Color(51, 51, 51));
        supplierFormTitle3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        supplierFormTitle3.setText("Item Report");

        transactionReportIBtn.setBackground(new java.awt.Color(102, 0, 51));
        transactionReportIBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        transactionReportIBtn.setForeground(new java.awt.Color(255, 255, 255));
        transactionReportIBtn.setText("Transaction Report");
        transactionReportIBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transactionReportIBtnActionPerformed(evt);
            }
        });

        systemReportIBtn.setBackground(new java.awt.Color(102, 0, 51));
        systemReportIBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        systemReportIBtn.setForeground(new java.awt.Color(255, 255, 255));
        systemReportIBtn.setText("System Report");
        systemReportIBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                systemReportIBtnActionPerformed(evt);
            }
        });

        itemReportIBtn.setBackground(new java.awt.Color(102, 0, 51));
        itemReportIBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        itemReportIBtn.setForeground(new java.awt.Color(255, 255, 255));
        itemReportIBtn.setText("Item Report");

        jLabel48.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel48.setText("Item Code:");

        jLabel49.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel49.setText("Process:");

        process.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Distribute", "Receive" }));

        filterItemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(filterItemTable);

        filterItemBtn.setBackground(new java.awt.Color(51, 51, 51));
        filterItemBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        filterItemBtn.setForeground(new java.awt.Color(255, 255, 255));
        filterItemBtn.setText("Filter");
        filterItemBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    filterItemBtnActionPerformed(evt);
                } catch (Exception ex) {
                }
            }
        });

        ReportI.setLayer(supplierFormTitle3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportI.setLayer(transactionReportIBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportI.setLayer(systemReportIBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportI.setLayer(itemReportIBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportI.setLayer(itemCodeBox, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportI.setLayer(jLabel48, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportI.setLayer(jLabel49, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportI.setLayer(process, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportI.setLayer(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        ReportI.setLayer(filterItemBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout ReportILayout = new javax.swing.GroupLayout(ReportI);
        ReportI.setLayout(ReportILayout);
        ReportILayout.setHorizontalGroup(
            ReportILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReportILayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ReportILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ReportILayout.createSequentialGroup()
                        .addComponent(transactionReportIBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(systemReportIBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(itemReportIBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ReportILayout.createSequentialGroup()
                        .addGroup(ReportILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(supplierFormTitle3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, ReportILayout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(ReportILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(ReportILayout.createSequentialGroup()
                                        .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(itemCodeBox, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(process, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(filterItemBtn)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        ReportILayout.setVerticalGroup(
            ReportILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReportILayout.createSequentialGroup()
                .addGroup(ReportILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(systemReportIBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(transactionReportIBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(itemReportIBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(supplierFormTitle3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(ReportILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemCodeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel48)
                    .addComponent(jLabel49)
                    .addComponent(process, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(filterItemBtn))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        form.add(ReportI, "card3");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setText("Enter the ID here:");

        searchbar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchbarKeyReleased(evt);
            }
        });

        searchBtn.setBackground(new java.awt.Color(51, 51, 51));
        searchBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        searchBtn.setForeground(new java.awt.Color(255, 255, 255));
        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        longlines.setText("___________________________________________________________________________________________________");

        javax.swing.GroupLayout searchpanelLayout = new javax.swing.GroupLayout(searchpanel);
        searchpanel.setLayout(searchpanelLayout);
        searchpanelLayout.setHorizontalGroup(
            searchpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(longlines, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(searchpanelLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchbar, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchBtn)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        searchpanelLayout.setVerticalGroup(
            searchpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(searchbar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(longlines)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        mainPanel.setLayer(label, javax.swing.JLayeredPane.DEFAULT_LAYER);
        mainPanel.setLayer(table, javax.swing.JLayeredPane.DEFAULT_LAYER);
        mainPanel.setLayer(delBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
        mainPanel.setLayer(editBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);
        mainPanel.setLayer(form, javax.swing.JLayeredPane.DEFAULT_LAYER);
        mainPanel.setLayer(searchpanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(table, javax.swing.GroupLayout.PREFERRED_SIZE, 722, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(editBtn)
                        .addGap(18, 18, 18)
                        .addComponent(delBtn)
                        .addGap(9, 9, 9)))
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchpanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(form)
                        .addContainerGap())))
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(40, 40, 40))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(label)
                .addGap(12, 12, 12)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(table, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(delBtn)
                            .addComponent(editBtn)))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(searchpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(form, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPanel))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void adjustUIBasedOnRole() {
        if ("Staff".equals(userRole)) {
            userBtn.setVisible(false);
            reportBtn.setVisible(false);
            jLabel1.setText("STAFF PAGE");
        }
    table.setVisible(false);
    form.setVisible(false);
    editBtn.setVisible(false);
    delBtn.setVisible(false);
    searchpanel.setVisible(false);
    }

    //MAIN PANELS BUTTON
    private void hospitalBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospitalBtnActionPerformed
        table.setVisible(true);
        form.setVisible(true);
        supplierForm.setVisible(false);
        hospitalForm.setVisible(true);
        transactionForm.setVisible(false);
        userForm.setVisible(false);
        ppeitemForm.setVisible(false);
        ReportT.setVisible(false);
        ReportS.setVisible(false);
        ReportI.setVisible(false);
        
        try {
            String newID = filefunction.generateNewID("hospitals.txt");
            newHospitalID.setText("H-"+newID);
        } catch (IOException ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Failed to generate new Hospital ID.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        label.setText("HOSPITAL MENU");
        saveHospitalBtn.setVisible(false);
        addHospitalBtn.setVisible(true);
        editBtn.setVisible(true);
        delBtn.setVisible(true);
        searchpanel.setVisible(true);
        searchbar.setText("");
        
        supplierScrollTable.setVisible(false);  
        hospitalScrollTable.setVisible(true); 
        userScrollTable.setVisible(false);      
        ppeItemScrollTable.setVisible(false);
        transactionScrollTable.setVisible(false);
        
        DefaultTableModel model1 = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
            //all cells false
            return false;
            }
        };
        String[] ColHeadings = {"Hospital ID", "Name", "Address", "Phone Number"};
        model1.setColumnIdentifiers(ColHeadings);
        hospitalTable.setModel(model1);
        model1.setRowCount(0);
        hospitalTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        try {
            filefunction.loadDataFromFile("hospitals.txt",model1);
        } catch (Exception ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Failed to load hospital data.", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_hospitalBtnActionPerformed

    private void supplierBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierBtnActionPerformed
        table.setVisible(true);
        form.setVisible(true);
        supplierForm.setVisible(true);
        hospitalForm.setVisible(false);
        transactionForm.setVisible(false);
        userForm.setVisible(false);
        ppeitemForm.setVisible(false);
        ReportT.setVisible(false);
        ReportS.setVisible(false);
        ReportI.setVisible(false);
        
        try {
            String newID = filefunction.generateNewID("suppliers.txt");
            newSupplierID.setText("S-"+newID);
        } catch (IOException ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Failed to generate new Supplier ID.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        label.setText("SUPPLIER MENU");
        saveSupplierBtn.setVisible(false);
        addSupplierBtn.setVisible(true);
        editBtn.setVisible(true);
        delBtn.setVisible(true);
        searchpanel.setVisible(true);
        searchbar.setText("");
        
        supplierScrollTable.setVisible(true);  
        hospitalScrollTable.setVisible(false); 
        userScrollTable.setVisible(false);      
        ppeItemScrollTable.setVisible(false);
        transactionScrollTable.setVisible(false);
        
        DefaultTableModel model2 = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
            //all cells false
            return false;
            }
        };
        String[] ColHeadings = {"Supplier ID", "Name", "Address", "Phone Number"};
        model2.setColumnIdentifiers(ColHeadings);
        supplierTable.setModel(model2);
        model2.setRowCount(0);
        supplierTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        try {
            filefunction.loadDataFromFile("suppliers.txt",model2);
        } catch (Exception ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Failed to load hospital data.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_supplierBtnActionPerformed

    private void userBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userBtnActionPerformed
        table.setVisible(true);
        form.setVisible(true);
        supplierForm.setVisible(false);
        hospitalForm.setVisible(false);
        transactionForm.setVisible(false);
        userForm.setVisible(true);
        ppeitemForm.setVisible(false);
        ReportT.setVisible(false);
        ReportS.setVisible(false);
        ReportI.setVisible(false);
        
        try {
        String newID = filefunction.generateNewID("users.txt");
        newUserID.setText("Staff-"+newID);
        } catch (IOException ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Failed to generate new User ID.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        label.setText("USER MENU");
        saveUserBtn.setVisible(false);
        addUserBtn.setVisible(true);
        editBtn.setVisible(true);
        delBtn.setVisible(true);
        searchpanel.setVisible(true);
        searchbar.setText("");
        
        supplierScrollTable.setVisible(false);  
        hospitalScrollTable.setVisible(false); 
        userScrollTable.setVisible(true);      
        ppeItemScrollTable.setVisible(false);
        transactionScrollTable.setVisible(false);
        
        DefaultTableModel model3 = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
            //all cells false
            return false;
            }
        };
        String[] ColHeadings = {"User ID", "Name", "Password","Email Address","Gender", "Type of user"};
        model3.setColumnIdentifiers(ColHeadings);
        userTable.setModel(model3);
        model3.setRowCount(0);
        userTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        try {
            filefunction.loadDataFromFile("users.txt",model3);
        } catch (Exception ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_userBtnActionPerformed

    private void ppeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ppeBtnActionPerformed
    table.setVisible(true);
        form.setVisible(true);
        supplierForm.setVisible(false);
        hospitalForm.setVisible(false);
        transactionForm.setVisible(false);
        userForm.setVisible(false);
        ppeitemForm.setVisible(true);
        ReportT.setVisible(false);
        ReportS.setVisible(false);
        ReportI.setVisible(false);
        
        label.setText("PPE ITEM MENU");
        editBtn.setVisible(true);
        savePPEBtn.setVisible(false);
        addPPEBtn.setVisible(true);
        delBtn.setVisible(true);
        searchpanel.setVisible(true);
        searchbar.setText("");
        
        supplierScrollTable.setVisible(false);  
        hospitalScrollTable.setVisible(false); 
        userScrollTable.setVisible(false);      
        ppeItemScrollTable.setVisible(true);
        transactionScrollTable.setVisible(false);
        
        t3.removeAllItems();
        List<String> allSupplierIDs = filefunction.GET_ALL_ID("suppliers.txt");
        for (String id : allSupplierIDs) {
            t3.addItem(id);
        }
        
        DefaultTableModel model4 = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
               //all cells false
                return false;
            }
        };
        String[] ColHeadings = {"Item ID", "Item Name", "Supplier ID","Price", "Quantity in stock"};
        model4.setColumnIdentifiers(ColHeadings);
        ppeItemTable.setModel(model4);
        model4.setRowCount(0);
        ppeItemTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    
        // Create a TableRowSorter for the table
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model4);
        ppeItemTable.setRowSorter(sorter);
    
        // Set the initial sorting column (Item ID is assumed to be the first column)
        List<RowSorter.SortKey> sortKeys = new ArrayList<>();
        sortKeys.add(new RowSorter.SortKey(0, SortOrder.ASCENDING));
        sorter.setSortKeys(sortKeys);
    
        try {
            filefunction.loadDataFromFile("ppe.txt", model4);
        } catch (Exception ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    
        // Apply the sort
        sorter.sort();
    }//GEN-LAST:event_ppeBtnActionPerformed
 
    private void transactionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transactionBtnActionPerformed
        table.setVisible(true);
        form.setVisible(true);
        filefunction.createFile("transactions.txt");
        supplierForm.setVisible(false);
        hospitalForm.setVisible(false);
        transactionForm.setVisible(true);
        userForm.setVisible(false);
        ppeitemForm.setVisible(false);
        ReportT.setVisible(false);
        ReportS.setVisible(false);
        ReportI.setVisible(false);

        try {
            String newID = filefunction.generateNewID("transactions.txt");
            newTransactionID.setText("T-"+newID);
        } catch (IOException ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Failed to generate new Supplier ID.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        label.setText("TRANSACTION MENU");
        addTransBtn.setVisible(true);
        editBtn.setVisible(false);
        delBtn.setVisible(true);
        searchpanel.setVisible(true);
        searchbar.setText("");
        
        supplierScrollTable.setVisible(false);  
        hospitalScrollTable.setVisible(false); 
        userScrollTable.setVisible(false);      
        ppeItemScrollTable.setVisible(false);
        transactionScrollTable.setVisible(true);

        // Clear existing items in tt3 (Hospital/Supplier Code dropdown)
        tt3.removeAllItems();

        // Initialize tt1 (Item Code dropdown)
        tt1.removeAllItems();
        List<String> allppeIDs = filefunction.GET_ALL_ID("ppe.txt");
        for (String id : allppeIDs) {
            tt1.addItem(id);
        }

        // Initialize tt2 (Process dropdown)
        tt2.removeAllItems();
        tt2.addItem("Distribute");
        tt2.addItem("Receive");

        // Set up item listener for tt1 (Item Code combo box)
        tt1.addItemListener((ItemEvent e) -> {
            if (e.getStateChange() == ItemEvent.SELECTED && tt2.getSelectedItem().toString().equalsIgnoreCase("Receive")) {
                String selectedItemCode = tt1.getSelectedItem().toString();
                updateSupplierCode(selectedItemCode);
            }
        });

        // Set up item listener for tt2 (Process dropdown)
        tt2.addItemListener((ItemEvent e) -> {
            if (e.getStateChange() == ItemEvent.SELECTED) {
                updateHospitalSupplierCode();
            }
        });

        // Initialize the Hospital/Supplier Code dropdown based on the default Process
        updateHospitalSupplierCode();

        DefaultTableModel model5 = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        String[] ColHeadings = {"Transaction ID", "Item ID", "Process", "Supplier/Hospital ID", "Quantity", "Total Price", "Date", "Time"};
        model5.setColumnIdentifiers(ColHeadings);
        transactionTable.setModel(model5);
        model5.setRowCount(0);
        transactionTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        try {
            File transactionFile = new File("transactions.txt");
            if (!transactionFile.exists()) {
                // If the file doesn't exist, create it first
                filefunction.createFile("transactions.txt");
            }
            filefunction.loadDataFromFile("transactions.txt", model5);
        } catch (Exception ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_transactionBtnActionPerformed

    private boolean containsItem(JComboBox<String> comboBox, String item) {
        for (int i = 0; i < comboBox.getItemCount(); i++) {
            if (comboBox.getItemAt(i).equals(item)) {
                return true;
            }
        }
        return false;
    }

    private void updateHospitalSupplierCode() {
        String selectedProcess = tt2.getSelectedItem().toString();
        tt3.removeAllItems();
    
        try {
            if (selectedProcess.equalsIgnoreCase("Receive")) {
                jLabel5.setText("Supplier Code:");
                tt3.setEnabled(false);
                String selectedItemCode = tt1.getSelectedItem().toString();
                updateSupplierCode(selectedItemCode);
            } else if (selectedProcess.equalsIgnoreCase("Distribute")) {
                jLabel5.setText("Hospital Code:");
                tt3.setEnabled(true);
                List<String> allHospitalIDs = filefunction.GET_ALL_ID("hospitals.txt");
                for (String id : allHospitalIDs) {
                    tt3.addItem(id);
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
 
    private void updateSupplierCode(String itemCode) {
        try {
            String ppeData = filefunction.SEARCH_DATA("ppe.txt", itemCode, this);
            if (ppeData != null) {
                String[] ppeDataFields = ppeData.split(";");
                 String supplierCode = ppeDataFields[2]; // Assuming supplier code is the third field
                tt3.removeAllItems();
                tt3.addItem(supplierCode);
                tt3.setSelectedItem(supplierCode);
            } else {
                JOptionPane.showMessageDialog(this, "Can't find the selected PPE item. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Error fetching PPE data: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void reportBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportBtnActionPerformed
        table.setVisible(true);
        form.setVisible(true);
        filefunction.createFile("transactions.txt");
        supplierForm.setVisible(false);
        hospitalForm.setVisible(false);
        transactionForm.setVisible(false);
        userForm.setVisible(false);
        ppeitemForm.setVisible(false);
        ReportT.setVisible(true);
        ReportS.setVisible(false);
        ReportI.setVisible(false);
        
        label.setText("REPORT MENU");
        editBtn.setVisible(false);
        delBtn.setVisible(false);
        searchpanel.setVisible(false);
        
        supplierScrollTable.setVisible(false);
        hospitalScrollTable.setVisible(false);
        userScrollTable.setVisible(false);
        ppeItemScrollTable.setVisible(false);
        transactionScrollTable.setVisible(true);

        DefaultTableModel model5 = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
            //all cells false
            return false;
            }
        };
        String[] ColHeadings = {"Transaction ID", "Item ID", "Process", "Supplier/Hospital ID", "Quantity", "Total Price", "Date"};
        model5.setColumnIdentifiers(ColHeadings);
        transactionTable.setModel(model5);
        model5.setRowCount(0);
        transactionTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        try {
            filefunction.loadDataFromFile("transactions.txt",model5);
        } catch (Exception ex) {
            System.out.println("transactions.txt doesn't exist. Please create a transaction in the transaction menu");
        }
        transactionReportData(model5);
    }//GEN-LAST:event_reportBtnActionPerformed

    private void logoutBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutBtnMouseClicked
        System.out.println("Logout button clicked!");
        int logout = JOptionPane.showConfirmDialog(this, "Are you sure you want to logout?", "Confirm", JOptionPane.YES_NO_OPTION);
        if (logout == JOptionPane.YES_OPTION) {
            new LoginPage().setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_logoutBtnMouseClicked

    //ADD NEW DATA
    private void addPPEBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPPEBtnActionPerformed
        DefaultTableModel model = (DefaultTableModel) ppeItemTable.getModel();
        String input1 = t1.getText();
        String input2 = t2.getText();
        String input3 = (String) t3.getSelectedItem();
        String input4 = t4.getText();
        String input5 = "100";
        if (!input1.isEmpty() && !input2.isEmpty() && !input3.isEmpty()) {
            if (filefunction.isDuplicateID("ppe.txt", input1)) {
                JOptionPane.showMessageDialog(this, "Duplicate ID found. Please enter a unique ID.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (!input1.trim().matches("[a-zA-Z ]+")) {
            JOptionPane.showMessageDialog(this, "Item ID should only contain letters and spaces.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
            // item name only words allowed
            if (!input2.matches("[a-zA-Z ]+")) {
                JOptionPane.showMessageDialog(this, "Item name should only contain letters and spaces.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            // Price should be a valid number
            try {
                double price = Double.parseDouble(input4);
                if (price <= 0) {
                    JOptionPane.showMessageDialog(this, "Price should be a positive number.", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Price should be a valid number.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            filefunction.ADD_DATA("ppe.txt",model, input1, input2, input3, input4,input5);
            JOptionPane.showMessageDialog(this, "PPE item data submitted", "Message", JOptionPane.INFORMATION_MESSAGE);

            //Clear all TextField contents
            t1.setText("");
            t2.setText("");
            t4.setText("");
        }
    }//GEN-LAST:event_addPPEBtnActionPerformed

    private void addHospitalBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addHospitalBtnActionPerformed
        DefaultTableModel model = (DefaultTableModel) hospitalTable.getModel();
        String input1 = ht1.getText();
        String input2 = ht2.getText();
        String input3 = ht3.getText();
        if (!input1.isEmpty() && !input2.isEmpty() && !input3.isEmpty()) {
            // name words only allowed
            if (!input1.trim().matches("[a-zA-Z ]+")) {
                JOptionPane.showMessageDialog(this, "Name should only contain letters and spaces.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // phone number only numbers allowed, no limit on digits
            if (!input3.matches("\\d+")) {
                JOptionPane.showMessageDialog(this, "Phone number should only contain digits.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            int count = model.getRowCount();
            if (count >= 4){
                JOptionPane.showMessageDialog(this, "You have reached the maximum number of hospitals allowed. Please delete a hospital to add a new one.", "Error", JOptionPane.ERROR_MESSAGE);
            }
            else{
                filefunction.ADD_DATA("hospitals.txt",model, input1, input2, input3);
                JOptionPane.showMessageDialog(this, "Hospital data submitted", "Message", JOptionPane.INFORMATION_MESSAGE) ;
            }

            // Clear all TextField contents
            ht1.setText("");
            ht2.setText("");
            ht3.setText("");
            
            try {
                String newID = filefunction.generateNewID("hospitals.txt");
                newHospitalID.setText("H-"+newID);
            } catch (IOException ex) {
                Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Failed to generate new Hospital ID.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_addHospitalBtnActionPerformed

    private void addUserBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUserBtnActionPerformed
        DefaultTableModel model = (DefaultTableModel) userTable.getModel();
        String input1 = ut1.getText();
        String input2 = ut2.getText();
        String input3 = ut3.getText();
        String input4 = (String) ut4.getSelectedItem();
        String input5 = (String) ut5.getSelectedItem();
        if (!input1.isEmpty() && !input2.isEmpty() && !input3.isEmpty()&& !input4.isEmpty()&& !input5.isEmpty()) {
            if (!input1.trim().matches("[a-zA-Z ]+")) {
                JOptionPane.showMessageDialog(this, "Name should only contain letters and spaces.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (!input3.trim().contains("@gmail.com")) {
                JOptionPane.showMessageDialog(this, "Email Address should only contain @gmail.com.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            filefunction.ADD_DATA("users.txt",model, input1, input2, input3,input4,input5);
            JOptionPane.showMessageDialog(this, "User data submitted", "Message", JOptionPane.INFORMATION_MESSAGE);

            // Clear all TextField contents
            ut1.setText("");
            ut2.setText("");

        }
    }//GEN-LAST:event_addUserBtnActionPerformed

    private void addSupplierBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSupplierBtnActionPerformed
        DefaultTableModel model = (DefaultTableModel) supplierTable.getModel();
        String input1 = st1.getText();
        String input2 = st2.getText();
        String input3 = st3.getText();
        if (!input1.isEmpty() && !input2.isEmpty() && !input3.isEmpty()) {
            // name words only allowed
            if (!input1.trim().matches("[a-zA-Z ]+")) {
                JOptionPane.showMessageDialog(this, "Name should only contain letters and spaces.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            //phone number only numbers allowed without limited digits
            if (!input3.matches("\\d+")) {
                JOptionPane.showMessageDialog(this, "Phone number should only contain digits.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            int count = model.getRowCount();
            if (count >= 4){
                JOptionPane.showMessageDialog(this, "You have reached the maximum number of suppliers allowed. Please delete a hospital to add a new one.", "Error", JOptionPane.ERROR_MESSAGE);
            }
            else{
                filefunction.ADD_DATA("suppliers.txt",model, input1, input2, input3);
                JOptionPane.showMessageDialog(this, "Supplier data submitted", "Message", JOptionPane.INFORMATION_MESSAGE);
            }

            // Clear all TextField contents
            st1.setText("");
            st2.setText("");
            st3.setText("");
            
            try {
                String newID = filefunction.generateNewID("suppliers.txt");
                newSupplierID.setText("S-"+newID);
            } catch (IOException ex) {
                Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Failed to generate new Hospital ID.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_addSupplierBtnActionPerformed

    private void addTransBtnActionPerformed(java.awt.event.ActionEvent evt) {
        DefaultTableModel model = (DefaultTableModel) transactionTable.getModel();
    String itemCode = (String) tt1.getSelectedItem();
    String process = (String) tt2.getSelectedItem();
    String hospitalSupplierCode = (String) tt3.getSelectedItem();
    String quantity = tt4.getText();

    if (!itemCode.isEmpty() && !process.isEmpty() && !hospitalSupplierCode.isEmpty() && !quantity.isEmpty()) {
        try {
            int quantityValue = Integer.parseInt(quantity);
            if (quantityValue < 0) {
                JOptionPane.showMessageDialog(this, "Quantity should be a positive number.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            // Get current stock and update it
            String ppeData = filefunction.SEARCH_DATA("ppe.txt", itemCode, this);
            String[] ppeFields = ppeData.split(";");
            int currentStock = Integer.parseInt(ppeFields[4]);
            int newStock = process.equals("Distribute") ? currentStock - quantityValue : currentStock + quantityValue;

            if (newStock < 0) {
                JOptionPane.showMessageDialog(this, "Not enough stock available, current quantity of "+ ppeFields[1] + " only have "+ currentStock , "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            // Update PPE stock
            ppeFields[4] = String.valueOf(newStock);
            filefunction.EDIT_DATA("ppe.txt", ppeFields);

            // Calculate total price (assuming price is stored in PPE file)
            double itemPrice = Double.parseDouble(ppeFields[3]);
            double totalPrice = quantityValue * itemPrice;

            // Get current date
            Date currentDate = new Date();
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String formattedDate = dateFormat.format(currentDate);

            // Get current time
            SimpleDateFormat timeFormat = new SimpleDateFormat("HH:mm:ss");
            String formattedTime = timeFormat.format(currentDate);

            // Add new transaction
            String[] transactionData = {
                itemCode,
                process,
                hospitalSupplierCode,
                String.valueOf(quantityValue),
                String.format("%.2f", totalPrice),
                formattedDate,
                formattedTime
            };
            
            filefunction.ADD_DATA("transactions.txt", (DefaultTableModel) transactionTable.getModel(), transactionData);

            // quantity will give alert when less then 25, show the PPE name and quantity that less than 25
            if (newStock < 25) {
                JOptionPane.showMessageDialog(this, "Quantity of "+ ppeFields[1] +" is less than 25. Please add more stock.", "Warning", JOptionPane.WARNING_MESSAGE);
            }

            JOptionPane.showMessageDialog(this, "Transaction data submitted", "Message", JOptionPane.INFORMATION_MESSAGE);


            // Clear input fields
            tt1.setSelectedIndex(0);
            tt2.setSelectedIndex(0);
            tt3.setSelectedIndex(0);
            tt4.setText("");  

            try {
                String newID = filefunction.generateNewID("transactions.txt");
                newTransactionID.setText("S-"+newID);
            } catch (IOException ex) {
                Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Failed to generate new Transaction ID.", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid quantity", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "An unexpected error occurred: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        JOptionPane.showMessageDialog(this, "Please fill in all fields", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }

    //SAVE CHANGES
    private void saveUserBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveUserBtnActionPerformed
        DefaultTableModel model = (DefaultTableModel)userTable.getModel();
        int sRow = userTable.getSelectedRow();
        
        // Prepare data for file update
        String[] newData = new String[6];
        newData[0] = newUserID.getText();
        newData[1] = ut1.getText();
        newData[2] = ut2.getText();
        newData[3] = ut3.getText();
        newData[4] = (String) ut4.getSelectedItem();
        newData[5] = (String) ut5.getSelectedItem();
        
        // Call file update method
        if (!newData[1].isEmpty() && !newData[2].isEmpty() && !newData[3].isEmpty()) {
            if (!newData[1].trim().matches("[a-zA-Z ]+")) {
                JOptionPane.showMessageDialog(this, "Name should only contain letters and spaces.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (!newData[3].trim().contains("@gmail.com")) {
                JOptionPane.showMessageDialog(this, "Email Address should only contain @gmail.com.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            boolean actionDone = filefunction.EDIT_DATA("users.txt", newData);
            if (actionDone) {
                JOptionPane.showMessageDialog(rootPane, "User Data updated successfully", "Update Result", JOptionPane.INFORMATION_MESSAGE);
                addUserBtn.setVisible(true);
                saveUserBtn.setVisible(false);
                
                model.setValueAt(newUserID.getText(),sRow,0);
                model.setValueAt(ut1.getText(),sRow,1);
                model.setValueAt(ut2.getText(),sRow,2);
                model.setValueAt(ut3.getText(),sRow,3);
                model.setValueAt(ut4.getSelectedItem(),sRow,4);
                model.setValueAt(ut5.getSelectedItem(),sRow,5);
                try {
                    String newID = filefunction.generateNewID("users.txt");
                    newUserID.setText("Staff-"+newID);
                } catch (IOException ex) {
                    Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this, "Failed to generate new user ID.", "Error", JOptionPane.ERROR_MESSAGE);
                }
                ut1.setText("");
                ut2.setText("");
                ut3.setText("");
                ut4.setSelectedItem(0);
                ut5.setSelectedItem(0);
            } else {
                JOptionPane.showMessageDialog(rootPane, "Failed to update data", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }   
    }//GEN-LAST:event_saveUserBtnActionPerformed

    private void saveSupplierBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveSupplierBtnActionPerformed
        DefaultTableModel model = (DefaultTableModel)supplierTable.getModel();
        int sRow = supplierTable.getSelectedRow();
        
        // Prepare data for file update
        String[] newData = new String[4];
        newData[0] = newSupplierID.getText();
        newData[1] = st1.getText();
        newData[2] = st2.getText();
        newData[3] = st3.getText();
        
        // Call file update method
        if (!newData[1].isEmpty() && !newData[2].isEmpty() && !newData[3].isEmpty()) {
            // name words only allowed
            if (!newData[1].trim().matches("[a-zA-Z ]+")) {
                JOptionPane.showMessageDialog(this, "Name should only contain letters and spaces.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            //phone number only numbers allowed without limited digits
            if (!newData[3].matches("\\d+")) {
                JOptionPane.showMessageDialog(this, "Phone number should only contain digits.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            boolean actionDone = filefunction.EDIT_DATA("suppliers.txt", newData);
            if (actionDone) {
                JOptionPane.showMessageDialog(rootPane, "Supplier Data updated successfully", "Update Result", JOptionPane.INFORMATION_MESSAGE);
                addSupplierBtn.setVisible(true);
                saveSupplierBtn.setVisible(false);
                model.setValueAt(newSupplierID.getText(),sRow,0);
                model.setValueAt(st1.getText(),sRow,1);
                model.setValueAt(st2.getText(),sRow,2);
                model.setValueAt(st3.getText(),sRow,3);
                try {
                    String newID = filefunction.generateNewID("suppliers.txt");
                    newSupplierID.setText("S-"+newID);
                } catch (IOException ex) {
                    Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this, "Failed to generate new Supplier ID.", "Error", JOptionPane.ERROR_MESSAGE);
                }
                st1.setText("");
                st2.setText("");
                st3.setText("");
            } else {
                JOptionPane.showMessageDialog(rootPane, "Failed to update data", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_saveSupplierBtnActionPerformed

    private void saveHospitalBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveHospitalBtnActionPerformed
        DefaultTableModel model = (DefaultTableModel)hospitalTable.getModel();
        int sRow = hospitalTable.getSelectedRow();
        
        // Prepare data for file update
        String[] newData = new String[4];
        newData[0] = newHospitalID.getText();
        newData[1] = ht1.getText();
        newData[2] = ht2.getText();
        newData[3] = ht3.getText();
        
        // Call file update method
        if (!newData[1].isEmpty() && !newData[2].isEmpty() && !newData[3].isEmpty()) {
            // name words only allowed
            if (!newData[1].trim().matches("[a-zA-Z ]+")) {
                JOptionPane.showMessageDialog(this, "Name should only contain letters and spaces.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            //phone number only numbers allowed without limited digits
            if (!newData[3].matches("\\d+")) {
                JOptionPane.showMessageDialog(this, "Phone number should only contain digits.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            boolean actionDone = filefunction.EDIT_DATA("hospitals.txt", newData);
            
            if (actionDone) {
                JOptionPane.showMessageDialog(rootPane, "Hospital Data updated successfully", "Update Result", JOptionPane.INFORMATION_MESSAGE);
                addHospitalBtn.setVisible(true);
                saveHospitalBtn.setVisible(false);
                // Clear all TextFields
                
                model.setValueAt(newHospitalID.getText(),sRow,0);
                model.setValueAt(ht1.getText(),sRow,1);
                model.setValueAt(ht2.getText(),sRow,2);
                model.setValueAt(ht3.getText(),sRow,3);
                try {
                    String newID = filefunction.generateNewID("hospitals.txt");
                    newHospitalID.setText("H-"+newID);
                } catch (IOException ex) {
                    Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this, "Failed to generate new Hospital ID.", "Error", JOptionPane.ERROR_MESSAGE);
                }
                ht1.setText("");
                ht2.setText("");
                ht3.setText("");
            } else {
                JOptionPane.showMessageDialog(rootPane, "Failed to update data", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_saveHospitalBtnActionPerformed

    private void savePPEBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savePPEBtnActionPerformed
        DefaultTableModel model = (DefaultTableModel)ppeItemTable.getModel();
        int sRow = ppeItemTable.getSelectedRow();
        
        // Prepare data for file update
        String[] newData = new String[5];
        newData[0] = t1.getText();
        newData[1] = t2.getText();
        newData[2] = (String)t3.getSelectedItem();
        newData[3] = t4.getText();
        newData[4] = t5.getText();
        
        // Call file update method
        if (!newData[0].isEmpty() && !newData[1].isEmpty() && !newData[3].isEmpty()&& !newData[4].isEmpty()) {
            // item name only words allowed
            if (!newData[1].matches("[a-zA-Z ]+")) {
                JOptionPane.showMessageDialog(this, "Item name should only contain letters and spaces.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            // Price should be a valid number
            try {
                double price = Double.parseDouble(newData[3]);
                if (price <= 0) {
                    JOptionPane.showMessageDialog(this, "Price should be a positive number.", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Price should be a valid number.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            boolean actionDone = filefunction.EDIT_DATA("ppe.txt", newData);
            
            if (actionDone) {
                JOptionPane.showMessageDialog(rootPane, "PPE Item Data updated successfully", "Update Result", JOptionPane.INFORMATION_MESSAGE);
                addPPEBtn.setVisible(true);
                savePPEBtn.setVisible(false);
                model.setValueAt(t1.getText(),sRow,0);
                model.setValueAt(t2.getText(),sRow,1);
                model.setValueAt(t3.getSelectedItem(),sRow,2);
                model.setValueAt(t4.getText(),sRow,3);
                model.setValueAt(t5.getText(),sRow,4);
                t1.setText("");
                t1.setEditable(true);
                t2.setText("");
                t3.setSelectedItem(0);
                t4.setText("");
                t5.setText("100");
            } else {
                JOptionPane.showMessageDialog(rootPane, "Failed to update data", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_savePPEBtnActionPerformed

    //EDIT, SEARCH AND DELETE
    private void delBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delBtnActionPerformed
        try {
            if (hospitalScrollTable.isVisible()) {
                DefaultTableModel model1 = (DefaultTableModel) hospitalTable.getModel();
                int sRow = hospitalTable.getSelectedRow();
                if (sRow >= 0) {
                    String hospitalID = model1.getValueAt(sRow, 0).toString();
                    filefunction.DELETE_DATA("hospitals.txt", hospitalID, this, model1,sRow); 
                } else {
                    throw new IllegalStateException("Please select a row to delete.");
                }
            } else if (supplierScrollTable.isVisible()) {
                DefaultTableModel model2 = (DefaultTableModel) supplierTable.getModel();
                int sRow = supplierTable.getSelectedRow();
                if (sRow >= 0) {
                    String supplierID = model2.getValueAt(sRow, 0).toString();
                    filefunction.DELETE_DATA("suppliers.txt", supplierID, this,model2,sRow);
                } else {
                    throw new IllegalStateException("Please select a row to delete.");
                }
            } else if (userScrollTable.isVisible()) {
                DefaultTableModel model3 = (DefaultTableModel) userTable.getModel();
                int sRow = userTable.getSelectedRow();
                if (sRow >= 0) {
                    String userID = model3.getValueAt(sRow, 0).toString();
                    if(userID.equals("Staff-00000")){
                        JOptionPane.showMessageDialog(this, "Admin cannot be deleted.", "Error", JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                    filefunction.DELETE_DATA("users.txt", userID, this,model3,sRow);
                } else {
                    throw new IllegalStateException("Please select a row to delete.");
                }
            } else if (ppeItemScrollTable.isVisible()) {
                DefaultTableModel model4 = (DefaultTableModel) ppeItemTable.getModel();
                int sRow = ppeItemTable.getSelectedRow();
                if (sRow >= 0) {
                    String itemID = model4.getValueAt(sRow, 0).toString();
                    filefunction.DELETE_DATA("ppe.txt", itemID, this, model4,sRow);
                } else {
                    throw new IllegalStateException("Please select a row to delete.");
                }
            } else if (transactionScrollTable.isVisible()){
                DefaultTableModel model5 = (DefaultTableModel) transactionTable.getModel();
                int sRow = transactionTable.getSelectedRow();
                if (sRow >= 0) {
                    String transactionID = model5.getValueAt(sRow, 0).toString();
                    filefunction.DELETE_DATA("transactions.txt", transactionID, this, model5,sRow);
                } else {
                    throw new IllegalStateException("Please select a row to delete.");
                }
            }
        } catch (IllegalStateException ex) {
            // Handle the exception here
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_delBtnActionPerformed

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        if (hospitalScrollTable.isVisible()) {
            hospitalFormTitle.setText("Edit Hospital Form");
            saveHospitalBtn.setVisible(true);
            addHospitalBtn.setVisible(false);

            DefaultTableModel model1 = (DefaultTableModel) hospitalTable.getModel();
            int sRow = hospitalTable.getSelectedRow();
            if (sRow >= 0) {
                newHospitalID.setText(model1.getValueAt(sRow, 0).toString());
                ht1.setText(model1.getValueAt(sRow, 1).toString());
                ht2.setText(model1.getValueAt(sRow, 2).toString());
                ht3.setText(model1.getValueAt(sRow, 3).toString());
            } else {
                JOptionPane.showMessageDialog(rootPane, "Please select a row");
            }
        } else if (supplierScrollTable.isVisible()) {
            supplierFormTitle.setText("Edit Supplier Form");
            saveSupplierBtn.setVisible(true);
            addSupplierBtn.setVisible(false);
            DefaultTableModel model2 = (DefaultTableModel) supplierTable.getModel();
            int sRow = supplierTable.getSelectedRow();
            if (sRow >= 0) {
                newSupplierID.setText(model2.getValueAt(sRow, 0).toString());
                st1.setText(model2.getValueAt(sRow, 1).toString());
                st2.setText(model2.getValueAt(sRow, 2).toString());
                st3.setText(model2.getValueAt(sRow, 3).toString());
            } else {
                JOptionPane.showMessageDialog(rootPane, "Please select a row");
            }
        } else if (userScrollTable.isVisible()) {
            
            userFormTitle.setText("Edit User Form");
            
            DefaultTableModel model3 = (DefaultTableModel) userTable.getModel();
            int sRow = userTable.getSelectedRow();
            if (sRow >= 0) {
                String selectedUserID = model3.getValueAt(sRow, 0).toString(); 
                if (selectedUserID.equals("Staff-00000")) {
                    JOptionPane.showMessageDialog(this, "Admin cannot be edited.", "Error", JOptionPane.ERROR_MESSAGE);
                    System.out.println("Admin edit attempt blocked.");
                    return; 
                }
                saveUserBtn.setVisible(true);
                addUserBtn.setVisible(false);
                newUserID.setText(selectedUserID);
                ut1.setText(model3.getValueAt(sRow, 1).toString());
                ut2.setText(model3.getValueAt(sRow, 2).toString());
                ut3.setText(model3.getValueAt(sRow, 3).toString());
                ut4.setSelectedItem(model3.getValueAt(sRow, 4).toString());
                ut5.setSelectedItem(model3.getValueAt(sRow, 5).toString());
            } else {
                JOptionPane.showMessageDialog(rootPane, "Please select a row");
            }
        }else if (ppeItemScrollTable.isVisible()) {
            ppeItemFormTitle.setText("Edit PPE Item Form");
            savePPEBtn.setVisible(true); 
            addPPEBtn.setVisible(false);
            DefaultTableModel model4 = (DefaultTableModel) ppeItemTable.getModel();
            int sRow = ppeItemTable.getSelectedRow();
            if (sRow >= 0) {
                t1.setText(model4.getValueAt(sRow, 0).toString());
                t1.setEditable(false);
                t2.setText(model4.getValueAt(sRow, 1).toString());
                t3.setSelectedItem(model4.getValueAt(sRow, 2).toString());
                t4.setText(model4.getValueAt(sRow, 3).toString());
                t5.setText(model4.getValueAt(sRow, 4).toString());
            } else {
                JOptionPane.showMessageDialog(rootPane, "Please select a row");
            }
        } else if (transactionScrollTable.isVisible()) {
        }
    }//GEN-LAST:event_editBtnActionPerformed
    
    private void searchbarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchbarKeyReleased
        String input = searchbar.getText().trim().toUpperCase();
        if (!input.equals("")){
            List<String> allID = null;
            if (supplierScrollTable.isVisible()){
                allID = filefunction.GET_ALL_ID("suppliers.txt");
            } else if (hospitalScrollTable.isVisible()){
                allID = filefunction.GET_ALL_ID("hospitals.txt");
            }else if (userScrollTable.isVisible()) {
                allID = filefunction.GET_ALL_ID("users.txt");
            } else if (ppeItemScrollTable.isVisible()) {
                allID = filefunction.GET_ALL_ID("ppe.txt");
            } else if (transactionScrollTable.isVisible()) {
                allID = filefunction.GET_ALL_ID("transactions.txt");
            }
            mod.removeAllElements();
            for (String id:allID){
                if (id.startsWith(input)){
                    mod.addElement(id.toString());
                }
            }
            menu.show(searchbar,0,searchbar.getHeight());
        }
    }//GEN-LAST:event_searchbarKeyReleased

    private void listMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listMouseClicked
        searchbar.setText((String)list.getSelectedValue());
    }//GEN-LAST:event_listMouseClicked
    
    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        if (hospitalScrollTable.isVisible()) {
            DefaultTableModel model1 = (DefaultTableModel) hospitalTable.getModel();
            String search = searchbar.getText();
            String ID = filefunction.SEARCH_DATA("hospitals.txt", search,this);
            if (ID != null) {
                for (int i = 0; i < model1.getRowCount(); i++) {
                    if (model1.getValueAt(i, 0).toString().equals(search)) {
                        hospitalTable.setRowSelectionInterval(i, i);
                        hospitalTable.scrollRectToVisible(hospitalTable.getCellRect(i, 0, true)); //scroll to the area that can see the row
                        break;
                    }
                }
            }
        } else if (supplierScrollTable.isVisible()) {
            DefaultTableModel model2 = (DefaultTableModel) supplierTable.getModel();
            String search = searchbar.getText();
            String ID = filefunction.SEARCH_DATA("suppliers.txt", search,this);
            if (ID != null) {
                for (int i = 0; i < model2.getRowCount(); i++) {
                    if (model2.getValueAt(i, 0).toString().equals(search)) {
                        supplierTable.setRowSelectionInterval(i, i);
                        supplierTable.scrollRectToVisible(supplierTable.getCellRect(i, 0, true)); 
                        break;
                    }
                }
            }
        } else if (userScrollTable.isVisible()) {
            DefaultTableModel model3 = (DefaultTableModel) userTable.getModel();
            String search = searchbar.getText();
            String ID = filefunction.SEARCH_DATA("users.txt", search,this);
            if (ID != null) {
                for (int i = 0; i < model3.getRowCount(); i++) {
                    if (model3.getValueAt(i, 0).toString().equals(search)) {
                        userTable.setRowSelectionInterval(i, i);
                        userTable.scrollRectToVisible(userTable.getCellRect(i, 0, true)); 
                        break;
                    }
                }
            }
        } else if (ppeItemScrollTable.isVisible()) {
            DefaultTableModel model4 = (DefaultTableModel) ppeItemTable.getModel();
            String search = searchbar.getText();
            String ID = filefunction.SEARCH_DATA("ppe.txt", search,this);
            if (ID != null) {
                for (int i = 0; i < model4.getRowCount(); i++) {
                    if (model4.getValueAt(i, 0).toString().equals(search)) {
                        ppeItemTable.setRowSelectionInterval(i, i);
                        ppeItemTable.scrollRectToVisible(ppeItemTable.getCellRect(i, 0, true)); 
                        break;
                    }
                }
            }
        }else if (transactionScrollTable.isVisible()){
            DefaultTableModel model5 = (DefaultTableModel) transactionTable.getModel();
            String search = searchbar.getText();
            String ID = filefunction.SEARCH_DATA("transactions.txt", search,this);
            if (ID != null) {
                for (int i = 0; i < model5.getRowCount(); i++) {
                    if (model5.getValueAt(i, 0).toString().equals(search)) {
                        transactionTable.setRowSelectionInterval(i, i);
                        transactionTable.scrollRectToVisible(transactionTable.getCellRect(i, 0, true));
                        break;
                    }
                }
            }
        }
    }//GEN-LAST:event_searchBtnActionPerformed

    //FILTER REPORT
    private void filterReportBtnActionPerformed(java.awt.event.ActionEvent evt) throws Exception {//GEN-FIRST:event_filterReportBtnActionPerformed
        String startDate = startDateField.getText();
        String endDate = endDateField.getText();

        DefaultTableModel transactionModel = (DefaultTableModel) transactionTable.getModel();

        filterTransaction(startDate,endDate,transactionModel);

        transactionReportData(transactionModel);
    }//GEN-LAST:event_filterReportBtnActionPerformed

    public static void filterTransaction(String startDateStr, String endDateStr, DefaultTableModel model) throws Exception{
        //check date format
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        Date startDate;
        Date endDate;
        try {
            startDate = dateFormat.parse(startDateStr);
            endDate = dateFormat.parse(endDateStr);
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(null, "Please enter valid date in the format yyyy-MM-dd", "Invalid Date", JOptionPane.ERROR_MESSAGE);
            return;
        }

        List<String[]> transactions = filefunction.loadDataFromFile("transactions.txt", model);
        
        //add data to table
        model.setRowCount(0);
        for (String[] each: transactions){
            try {
                Date transactionDate = dateFormat.parse(each[6]);
                if ((transactionDate.compareTo(startDate)>=0)&& (transactionDate.compareTo(endDate)<=0)) {
                    model.addRow(each);
                }
            } catch (ParseException e) {
                e.printStackTrace();
            }
        }
    }

    private void generate7daysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generate7daysActionPerformed
        DefaultTableModel transactionModel = (DefaultTableModel) transactionTable.getModel();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        Date currentDate = new Date();
        String currentDateStr = dateFormat.format(currentDate);
        
        Calendar cal = Calendar.getInstance();
        cal.setTime(currentDate);
        cal.add(Calendar.DATE, -7);
        Date beforeDate = cal.getTime();
        String beforeDateStr = dateFormat.format(beforeDate);
        
        try {
            filefunction.loadDataFromFile("transactions.txt", transactionModel);
        } catch (Exception ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        transactionModel.setRowCount(0);
        try {
            filterTransaction(beforeDateStr,currentDateStr,transactionModel);
        } catch (Exception ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        transactionReportData(transactionModel);
    }//GEN-LAST:event_generate7daysActionPerformed

    private void transactionReportData(DefaultTableModel model){
        r1.setText(String.valueOf(model.getRowCount()));
        int totalItemsDistributed = 0;
        int totalItemsReceived = 0;
        double totalNetIncome = 0.0;
        double totalRevenue = 0.0;

        for (int i = 0; i < model.getRowCount(); i++){
            int quantity = Integer.parseInt(model.getValueAt(i,4).toString());
            double price = Double.parseDouble(model.getValueAt(i, 5).toString());
            if ("Distribute".equals(model.getValueAt(i,2))){
                totalItemsDistributed += quantity;
                totalNetIncome+=price;
                totalRevenue += price;
            }else if("Receive".equals(model.getValueAt(i,2))){
                totalItemsReceived += quantity;
                totalNetIncome-=price;
            }
        }
        r2.setText(String.valueOf(totalItemsDistributed));
        r3.setText(String.valueOf(totalItemsReceived));
        r4.setText(String.format("%.2f", totalRevenue));
        r5.setText(String.format("%.2f", totalNetIncome));
    }
    
    private void generate30daysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generate30daysActionPerformed
        DefaultTableModel transactionModel = (DefaultTableModel) transactionTable.getModel();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        Date currentDate = new Date();
        String currentDateStr = dateFormat.format(currentDate);
        
        Calendar cal = Calendar.getInstance();
        cal.setTime(currentDate);
        cal.add(Calendar.DATE, -30);
        Date beforeDate = cal.getTime();
        String beforeDateStr = dateFormat.format(beforeDate);
        
        try {
            filefunction.loadDataFromFile("transactions.txt", transactionModel);
        } catch (Exception ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        }
        transactionModel.setRowCount(0);
        try {
            filterTransaction(beforeDateStr,currentDateStr,transactionModel);
        } catch (Exception ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        transactionReportData(transactionModel);
    }//GEN-LAST:event_generate30daysActionPerformed

    private void systemReportTBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_systemReportTBtnActionPerformed
        systemReportSBtn.setEnabled(false);
        ReportS.setVisible(true);
        ReportT.setVisible(false);
        ReportI.setVisible(false);
        
        //set up the tables
        DefaultTableModel transactionModel = (DefaultTableModel) transactionTable.getModel();
        DefaultTableModel userModel = new DefaultTableModel(new String[]{"ID", "Name", "Code", "Email", "Gender", "Type of User"}, 0);//cause there's no column headings
        try {
            transactionModel.setRowCount(0);
            filefunction.loadDataFromFile("transactions.txt", transactionModel);
            filefunction.loadDataFromFile("users.txt", userModel);
        } catch (Exception ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        }

        List<String> allHospitalID = filefunction.GET_ALL_ID("hospitals.txt");
        sr1.setText(String.valueOf(allHospitalID.size()));
    
        HashSet<String> uniqueSIDs = new HashSet<>();
        HashSet<String> uniqueHIDs = new HashSet<>();
        HashMap<String,Integer> hTransactionCount = new HashMap<>();
        HashMap<String,Integer> sTransactionCount = new HashMap<>();
        String mostTransactionSID = null;
        String mostTransactionHID = null;
        int maxSTransaction = 0;
        int maxHTransaction = 0;
        
        for (int i = 0; i < transactionModel.getRowCount(); i++){
            String IDs = (String) transactionModel.getValueAt(i,3);
            
            if (IDs.startsWith("S-")){
                int countS = sTransactionCount.getOrDefault(IDs,0)+1;
                sTransactionCount.put(IDs,countS);
                if (countS >= maxSTransaction){
                    maxSTransaction = countS;
                    mostTransactionSID = IDs;
                }
                uniqueSIDs.add(IDs);
            }else if(IDs.startsWith("H-")){
                int countH = hTransactionCount.getOrDefault(IDs,0)+1;
                hTransactionCount.put(IDs,countH);
                if (countH >= maxHTransaction){
                    maxHTransaction = countH;
                    mostTransactionHID = IDs;
                }
                uniqueHIDs.add(IDs);
            }
        }
        sr2.setText(String.valueOf(uniqueHIDs.size()));
        sr3.setText(String.valueOf(mostTransactionHID));
        
        List<String> allSupplierID = filefunction.GET_ALL_ID("suppliers.txt");
        sr4.setText(String.valueOf(allSupplierID.size()));
        
        sr5.setText(String.valueOf(uniqueSIDs.size()));
        sr6.setText(String.valueOf(mostTransactionSID));
        
        List<String> allUserID = filefunction.GET_ALL_ID("users.txt");
        sr7.setText(String.valueOf(allUserID.size()));

        int noOfStaffs = 0;
        int noOfFemales = 0;
        int noOfAdmins = 0;
        int noOfMales = 0;
        for (int i = 0; i < userModel.getRowCount(); i++){
            String gender = (String) userModel.getValueAt(i,4);
            String typeOfUsers = (String) userModel.getValueAt(i,5);
            
            if ("Staff".equals(typeOfUsers)){
                noOfStaffs++;
            }else{
                noOfAdmins++;
            }
            if ("Female".equals(gender)){
                noOfFemales++;
            }else{
                noOfMales++;
            }
        }
        female.setText(String.valueOf(noOfFemales) + " Female");
        staff.setText(String.valueOf(noOfStaffs) + " Staff");
        male.setText(String.valueOf(noOfMales) + " Male");
        admin.setText(String.valueOf(noOfAdmins) + " Admin");
        
        double femalePercentage = ((double) noOfFemales / allUserID.size()) * 100;
        sr9.setValue((int) Math.round(femalePercentage));
        double staffPercentage = ((double) noOfStaffs / allUserID.size()) * 100;
        sr8.setValue((int) Math.round(staffPercentage));
    }//GEN-LAST:event_systemReportTBtnActionPerformed

    private void itemReportTBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemReportTBtnActionPerformed
        itemReportSBtnActionPerformed(evt);
    }//GEN-LAST:event_itemReportTBtnActionPerformed

    private void itemReportSBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemReportSBtnActionPerformed
        itemReportIBtn.setEnabled(false);
        ReportI.setVisible(true);
        ReportS.setVisible(false);
        ReportT.setVisible(false);
        
        List<String> itemIDs = filefunction.GET_ALL_ID("ppe.txt");
        
        itemCodeBox.removeAllItems();
        for (String id : itemIDs) {
            itemCodeBox.addItem(id);
        }
    }//GEN-LAST:event_itemReportSBtnActionPerformed

    private void transactionReportSBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transactionReportSBtnActionPerformed
        transactionReportTBtn.setEnabled(false);
        ReportS.setVisible(false);
        ReportT.setVisible(true);
        ReportI.setVisible(false);
    }//GEN-LAST:event_transactionReportSBtnActionPerformed

    private void transactionReportIBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transactionReportIBtnActionPerformed
        transactionReportSBtnActionPerformed(evt);
    }//GEN-LAST:event_transactionReportIBtnActionPerformed

    private void systemReportIBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_systemReportIBtnActionPerformed
        systemReportTBtnActionPerformed(evt);
    }//GEN-LAST:event_systemReportIBtnActionPerformed

    private void filterItemBtnActionPerformed(java.awt.event.ActionEvent evt) throws Exception {//GEN-FIRST:event_filterItemBtnActionPerformed
        String selectedProcess = process.getSelectedItem().toString();
        String selectedItem = itemCodeBox.getSelectedItem().toString();
         
         //add data to table
        DefaultTableModel transactionModel = (DefaultTableModel) transactionTable.getModel();
        List<String[]> transactions = filefunction.loadDataFromFile("transactions.txt", transactionModel);
        transactionModel.setRowCount(0);
        Map<String, Integer> itemDistribution = new HashMap<>();
        
        for (String[] each: transactions){
            if ((each[1].equals(selectedItem))&& (each[2].equals(selectedProcess))) {
                 transactionModel.addRow(each);
                 int quantity = Integer.parseInt(each[4]);
                 itemDistribution.put(each[3], itemDistribution.getOrDefault(each[3], 0) + quantity);
            }
        }
        
        DefaultTableModel filterModel = (DefaultTableModel) filterItemTable.getModel();
        filterModel.setRowCount(0);
        String[] ColHeadings = {"Item ID", "Supplier/Hospital ID", "Total Quantity Distributed"};
        filterModel.setColumnIdentifiers(ColHeadings);
        for (Map.Entry<String, Integer> entry : itemDistribution.entrySet()) {
            String supplierHospitalId = entry.getKey();
            int totalQuantity = entry.getValue();
            filterModel.addRow(new Object[] { selectedItem, supplierHospitalId, totalQuantity });
        }
        
    }//GEN-LAST:event_filterItemBtnActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLayeredPane ReportI;
    private javax.swing.JLayeredPane ReportS;
    private javax.swing.JLayeredPane ReportT;
    private javax.swing.JButton addHospitalBtn;
    private javax.swing.JButton addPPEBtn;
    private javax.swing.JButton addSupplierBtn;
    private javax.swing.JButton addTransBtn;
    private javax.swing.JButton addUserBtn;
    private javax.swing.JLabel admin;
    private javax.swing.JButton delBtn;
    private javax.swing.JButton editBtn;
    private javax.swing.JTextField endDateField;
    private javax.swing.JLabel female;
    private javax.swing.JButton filterItemBtn;
    private javax.swing.JTable filterItemTable;
    private javax.swing.JButton filterReportBtn;
    private javax.swing.JLayeredPane form;
    private javax.swing.JButton generate30days;
    private javax.swing.JButton generate7days;
    private javax.swing.JButton hospitalBtn;
    private javax.swing.JLayeredPane hospitalForm;
    private javax.swing.JLabel hospitalFormTitle;
    private javax.swing.JScrollPane hospitalScrollTable;
    private javax.swing.JTable hospitalTable;
    private javax.swing.JTextField ht1;
    private javax.swing.JTextArea ht2;
    private javax.swing.JTextField ht3;
    private javax.swing.JComboBox<String> itemCodeBox;
    private javax.swing.JButton itemReportIBtn;
    private javax.swing.JButton itemReportSBtn;
    private javax.swing.JButton itemReportTBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JLabel label;
    private javax.swing.JList<String> list;
    private javax.swing.JLabel logoutBtn;
    private javax.swing.JLabel longlines;
    private javax.swing.JLayeredPane mainPanel;
    private javax.swing.JLabel male;
    private javax.swing.JPopupMenu menu;
    private javax.swing.JLabel newHospitalID;
    private javax.swing.JLabel newSupplierID;
    private javax.swing.JLabel newTransactionID;
    private javax.swing.JLabel newUserID;
    private javax.swing.JPanel panel;
    private javax.swing.JButton ppeBtn;
    private javax.swing.JLabel ppeItemFormTitle;
    private javax.swing.JScrollPane ppeItemScrollTable;
    private javax.swing.JTable ppeItemTable;
    private javax.swing.JLayeredPane ppeitemForm;
    private javax.swing.JComboBox<String> process;
    private javax.swing.JLabel r1;
    private javax.swing.JLabel r2;
    private javax.swing.JLabel r3;
    private javax.swing.JLabel r4;
    private javax.swing.JLabel r5;
    private javax.swing.JButton reportBtn;
    private javax.swing.JButton saveHospitalBtn;
    private javax.swing.JButton savePPEBtn;
    private javax.swing.JButton saveSupplierBtn;
    private javax.swing.JButton saveUserBtn;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchbar;
    private javax.swing.JPanel searchpanel;
    private javax.swing.JLabel sr1;
    private javax.swing.JLabel sr2;
    private javax.swing.JLabel sr3;
    private javax.swing.JLabel sr4;
    private javax.swing.JLabel sr5;
    private javax.swing.JLabel sr6;
    private javax.swing.JLabel sr7;
    private javax.swing.JProgressBar sr8;
    private javax.swing.JProgressBar sr9;
    private javax.swing.JTextField st1;
    private javax.swing.JTextArea st2;
    private javax.swing.JTextField st3;
    private javax.swing.JLabel staff;
    private javax.swing.JTextField startDateField;
    private javax.swing.JButton supplierBtn;
    private javax.swing.JLayeredPane supplierForm;
    private javax.swing.JLabel supplierFormTitle;
    private javax.swing.JLabel supplierFormTitle1;
    private javax.swing.JLabel supplierFormTitle2;
    private javax.swing.JLabel supplierFormTitle3;
    private javax.swing.JScrollPane supplierScrollTable;
    private javax.swing.JTable supplierTable;
    private javax.swing.JButton systemReportIBtn;
    private javax.swing.JButton systemReportSBtn;
    private javax.swing.JButton systemReportTBtn;
    private javax.swing.JTextField t1;
    private javax.swing.JTextField t2;
    private javax.swing.JComboBox<String> t3;
    private javax.swing.JTextField t4;
    private javax.swing.JLabel t5;
    private javax.swing.JLayeredPane table;
    private javax.swing.JButton transactionBtn;
    private javax.swing.JLayeredPane transactionForm;
    private javax.swing.JButton transactionReportIBtn;
    private javax.swing.JButton transactionReportSBtn;
    private javax.swing.JButton transactionReportTBtn;
    private javax.swing.JScrollPane transactionScrollTable;
    private javax.swing.JTable transactionTable;
    private javax.swing.JComboBox<String> tt1;
    private javax.swing.JComboBox<String> tt2;
    private javax.swing.JComboBox<String> tt3;
    private javax.swing.JTextField tt4;
    private javax.swing.JButton userBtn;
    private javax.swing.JLayeredPane userForm;
    private javax.swing.JLabel userFormTitle;
    private javax.swing.JScrollPane userScrollTable;
    private javax.swing.JTable userTable;
    private javax.swing.JTextField ut1;
    private javax.swing.JTextField ut2;
    private javax.swing.JTextField ut3;
    private javax.swing.JComboBox<String> ut4;
    private javax.swing.JComboBox<String> ut5;
    // End of variables declaration//GEN-END:variables
 }
 
 /**
  *
  * @author songj and weisheng
  */
